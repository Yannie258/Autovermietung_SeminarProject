{"remainingRequest":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\vue-core-image-upload\\dist\\vue-core-image-upload.vue?vue&type=template&id=35cae6e6","dependencies":[{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\vue-core-image-upload\\dist\\vue-core-image-upload.vue","mtime":499162500000},{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCB7IHJlbmRlclNsb3QgYXMgX3JlbmRlclNsb3QsIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCB2U2hvdyBhcyBfdlNob3csIHdpdGhEaXJlY3RpdmVzIGFzIF93aXRoRGlyZWN0aXZlcywgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUgfSBmcm9tICJ2dWUiOwp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogImctY29yZS1pbWFnZS11cGxvYWQtYnRuIiwKICByZWY6ICJjb250YWluZXIiCn07CnZhciBfaG9pc3RlZF8yID0gewogIGNsYXNzOiAiZy1jb3JlLWltYWdlLXVwbG9hZC1mb3JtIiwKICBtZXRob2Q6ICJwb3N0IiwKICBlbmN0eXBlOiAibXVsdGlwYXJ0L2Zvcm0tZGF0YSIsCiAgYWN0aW9uOiAiIiwKICBzdHlsZToge30KfTsKdmFyIF9ob2lzdGVkXzMgPSB7CiAgY2xhc3M6ICJpbmZvLWFzaWRlIgp9Owp2YXIgX2hvaXN0ZWRfNCA9IHsKICBjbGFzczogImJ0bi1ncm91cHMgcm90YXRlLWdyb3VwcyIsCiAgc3R5bGU6IHsKICAgICJkaXNwbGF5IjogIm5vbmUiCiAgfQp9Owp2YXIgX2hvaXN0ZWRfNSA9IHsKICBrZXk6IDAsCiAgY2xhc3M6ICJidG4tZ3JvdXBzIgp9Owp2YXIgX2hvaXN0ZWRfNiA9IHsKICBrZXk6IDEsCiAgY2xhc3M6ICJidG4tZ3JvdXBzIgp9OwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHZhciBfY29tcG9uZW50X2Nyb3AgPSBfcmVzb2x2ZUNvbXBvbmVudCgiY3JvcCIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFtfcmVuZGVyU2xvdChfY3R4LiRzbG90cywgImRlZmF1bHQiLCB7fSwgZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIFtfY3JlYXRlVGV4dFZOb2RlKF90b0Rpc3BsYXlTdHJpbmcoX2N0eC50ZXh0KSwgMQogICAgLyogVEVYVCAqLwogICAgKV07CiAgfSksIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoImZvcm0iLCBfaG9pc3RlZF8yLCBbX2NyZWF0ZVZOb2RlKCJpbnB1dCIsIHsKICAgIGRpc2FibGVkOiAkZGF0YS51cGxvYWRpbmcsCiAgICBpZDogJ2ctY29yZS11cGxvYWQtaW5wdXQtJyArICRkYXRhLmZvcm1JRCwKICAgIG5hbWU6ICRvcHRpb25zLm5hbWUsCiAgICBtdWx0aXBsZTogX2N0eC5tdWx0aXBsZSwKICAgIHR5cGU6ICJmaWxlIiwKICAgIGFjY2VwdDogX2N0eC5pbnB1dEFjY2VwdCwKICAgIG9uQ2hhbmdlOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLmNoYW5nZSAmJiAkb3B0aW9ucy5jaGFuZ2UuYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KSwKICAgIG9uRHJhZ292ZXI6IF9jYWNoZVsyXSB8fCAoX2NhY2hlWzJdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuZHJhZ292ZXIgJiYgJG9wdGlvbnMuZHJhZ292ZXIuYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KSwKICAgIG9uRHJhZ2VudGVyOiBfY2FjaGVbM10gfHwgKF9jYWNoZVszXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLmRyYWdvdmVyICYmICRvcHRpb25zLmRyYWdvdmVyLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSksCiAgICBvbkRyYWdsZWF2ZTogX2NhY2hlWzRdIHx8IChfY2FjaGVbNF0gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5kcmFnbGVhdmUgJiYgJG9wdGlvbnMuZHJhZ2xlYXZlLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSksCiAgICBvbkRyYWdlbmQ6IF9jYWNoZVs1XSB8fCAoX2NhY2hlWzVdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuZHJhZ2xlYXZlICYmICRvcHRpb25zLmRyYWdsZWF2ZS5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0pLAogICAgb25Ecm9wOiBfY2FjaGVbNl0gfHwgKF9jYWNoZVs2XSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLmRyYWdsZWF2ZSAmJiAkb3B0aW9ucy5kcmFnbGVhdmUuYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KSwKICAgIHN0eWxlOiB7CiAgICAgICJ3aWR0aCI6ICIxMDAlIiwKICAgICAgImhlaWdodCI6ICIxMDAlIgogICAgfQogIH0sIG51bGwsIDQwCiAgLyogUFJPUFMsIEhZRFJBVEVfRVZFTlRTICovCiAgLCBbImRpc2FibGVkIiwgImlkIiwgIm5hbWUiLCAibXVsdGlwbGUiLCAiYWNjZXB0Il0pXSwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICksIFtbX3ZTaG93LCAhJGRhdGEuaGFzSW1hZ2VdXSksIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoImRpdiIsIHsKICAgIGNsYXNzOiAiZy1jb3JlLWltYWdlLWNvcnAtY29udGFpbmVyIiwKICAgIGlkOiAndmNpdS1tb2RhbC0nICsgJGRhdGEuZm9ybUlECiAgfSwgW19jcmVhdGVWTm9kZShfY29tcG9uZW50X2Nyb3AsIHsKICAgIHJlZjogImNyb3BCb3giLAogICAgImlzLXJlc2l6ZSI6IF9jdHgucmVzaXplICYmICFfY3R4LmNyb3AsCiAgICByYXRpbzogX2N0eC5jcm9wUmF0aW8sCiAgICAiaXMtcm90YXRlIjogX2N0eC5yb3RhdGUKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsiaXMtcmVzaXplIiwgInJhdGlvIiwgImlzLXJvdGF0ZSJdKSwgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF8zLCBbX2NyZWF0ZVZOb2RlKCJwIiwgX2hvaXN0ZWRfNCwgW19jcmVhdGVWTm9kZSgiYnV0dG9uIiwgewogICAgdHlwZTogImJ1dHRvbiIsCiAgICBvbkNsaWNrOiBfY2FjaGVbN10gfHwgKF9jYWNoZVs3XSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLmRvUm90YXRlICYmICRvcHRpb25zLmRvUm90YXRlLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSksCiAgICBjbGFzczogImJ0biBidG4tcm90YXRlIgogIH0sICLihroiKSwgX2NyZWF0ZVZOb2RlKCJidXR0b24iLCB7CiAgICB0eXBlOiAiYnV0dG9uIiwKICAgIG9uQ2xpY2s6IF9jYWNoZVs4XSB8fCAoX2NhY2hlWzhdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuZG9SZXZlcnNlUm90YXRlICYmICRvcHRpb25zLmRvUmV2ZXJzZVJvdGF0ZS5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0pLAogICAgY2xhc3M6ICJidG4gYnRuLXJldmVyc2Vyb3RhdGUiCiAgfSwgIuKGuyIpXSksIF9jdHguY3JvcCA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygicCIsIF9ob2lzdGVkXzUsIFtfY3JlYXRlVk5vZGUoImJ1dHRvbiIsIHsKICAgIHR5cGU6ICJidXR0b24iLAogICAgb25DbGljazogX2NhY2hlWzldIHx8IChfY2FjaGVbOV0gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5kb0Nyb3AgJiYgJG9wdGlvbnMuZG9Dcm9wLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSksCiAgICBjbGFzczogImJ0biBidG4tdXBsb2FkIgogIH0sIF90b0Rpc3BsYXlTdHJpbmcoX2N0eC5jcm9wQnRuLm9rKSwgMQogIC8qIFRFWFQgKi8KICApLCBfY3JlYXRlVk5vZGUoImJ1dHRvbiIsIHsKICAgIHR5cGU6ICJidXR0b24iLAogICAgb25DbGljazogX2NhY2hlWzEwXSB8fCAoX2NhY2hlWzEwXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLmNhbmNlbCAmJiAkb3B0aW9ucy5jYW5jZWwuYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KSwKICAgIGNsYXNzOiAiYnRuIGJ0bi1jYW5jZWwiCiAgfSwgX3RvRGlzcGxheVN0cmluZyhfY3R4LmNyb3BCdG4uY2FuY2VsKSwgMQogIC8qIFRFWFQgKi8KICApXSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCBfY3R4LnJlc2l6ZSAmJiAhX2N0eC5jcm9wID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJwIiwgX2hvaXN0ZWRfNiwgW19jcmVhdGVWTm9kZSgiYnV0dG9uIiwgewogICAgdHlwZTogImJ1dHRvbiIsCiAgICBvbkNsaWNrOiBfY2FjaGVbMTFdIHx8IChfY2FjaGVbMTFdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuZG9SZXNpemUgJiYgJG9wdGlvbnMuZG9SZXNpemUuYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KSwKICAgIGNsYXNzOiAiYnRuIGJ0bi11cGxvYWQiCiAgfSwgX3RvRGlzcGxheVN0cmluZyhfY3R4LlJlc2l6ZUJ0bi5vayksIDEKICAvKiBURVhUICovCiAgKSwgX2NyZWF0ZVZOb2RlKCJidXR0b24iLCB7CiAgICB0eXBlOiAiYnV0dG9uIiwKICAgIG9uQ2xpY2s6IF9jYWNoZVsxMl0gfHwgKF9jYWNoZVsxMl0gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5jYW5jZWwgJiYgJG9wdGlvbnMuY2FuY2VsLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSksCiAgICBjbGFzczogImJ0biBidG4tY2FuY2VsIgogIH0sIF90b0Rpc3BsYXlTdHJpbmcoX2N0eC5SZXNpemVCdG4uY2FuY2VsKSwgMQogIC8qIFRFWFQgKi8KICApXSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpXSldLCA4CiAgLyogUFJPUFMgKi8KICAsIFsiaWQiXSksIFtbX3ZTaG93LCAkZGF0YS5oYXNJbWFnZV1dKV0sIDUxMgogIC8qIE5FRURfUEFUQ0ggKi8KICApOwp9"},{"version":3,"sources":["C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\vue-core-image-upload\\dist\\vue-core-image-upload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"g-core-image-upload-btn\" ref=\"container\">\n    <slot>{{text}}</slot>\n    <form class=\"g-core-image-upload-form\" v-show=\"!hasImage\" method=\"post\" enctype=\"multipart/form-data\" action=\"\" style=\"\">\n      <input v-bind:disabled=\"uploading\" v-bind:id=\"'g-core-upload-input-' + formID\" v-bind:name=\"name\" v-bind:multiple=\"multiple\" type=\"file\" v-bind:accept=\"inputAccept\" v-on:change=\"change\" v-on:dragover=\"dragover\" v-on:dragenter=\"dragover\" v-on:dragleave=\"dragleave\" v-on:dragend=\"dragleave\" v-on:drop=\"dragleave\" style=\"width: 100%; height: 100%;\">\n    </form>\n    <div class=\"g-core-image-corp-container\" v-bind:id=\"'vciu-modal-' + formID\" v-show=\"hasImage\">\n      <crop ref=\"cropBox\" :is-resize=\"resize && !crop\" :ratio=\"cropRatio\" :is-rotate=\"rotate\"></crop>\n      <div class=\"info-aside\">\n        <p class=\"btn-groups rotate-groups\" style=\"display:none\">\n          <button type=\"button\" v-on:click=\"doRotate\" class=\"btn btn-rotate\">↺</button>\n          <button type=\"button\" v-on:click=\"doReverseRotate\" class=\"btn btn-reverserotate\">↻</button>\n        </p>\n        <p class=\"btn-groups\" v-if=\"crop\">\n          <button type=\"button\" v-on:click=\"doCrop\" class=\"btn btn-upload\">{{cropBtn.ok}}</button>\n          <button type=\"button\" v-on:click=\"cancel\" class=\"btn btn-cancel\">{{cropBtn.cancel}}</button>\n        </p>\n        <p class=\"btn-groups\" v-if=\"resize && !crop\">\n          <button type=\"button\" v-on:click=\"doResize\" class=\"btn btn-upload\">{{ResizeBtn.ok}}</button>\n          <button type=\"button\" v-on:click=\"cancel\" class=\"btn btn-cancel\">{{ResizeBtn.cancel}}</button>\n        </p>\n      </div>\n  </div>\n</div>\n</template>\n\n<style src=\"./style/style.css\">\n</style>\n\n<script>\n  import xhr from 'core-image-xhr';\n  import GIF_LOADING_SRC from './lib/loading-gif';\n  import canvasHelper from './lib/canvas-helper';\n  import props from './props';\n  import Crop from './crop.vue';\n  import ResizeBar from './resize-bar.vue';\n\n  let overflowVal = '';\n  export default {\n    components: {\n      Crop,\n      ResizeBar\n    },\n    props: props,\n    data() {\n      return {\n        files: [],\n        hasImage: false,\n        options: this.props,\n        uploading: false,\n        formID: (Math.random() * 10000 + '').split('.')[0],\n        image:{\n          src: GIF_LOADING_SRC,\n          width:24,\n          height:24,\n          minProgress: 0.05,\n        },\n      }\n    },\n\n    computed: {\n      name() {\n        if(this.multiple) {\n          return this.inputOfFile + '[]';\n        }\n        return this.inputOfFile;\n      }\n    },\n\n    methods: {\n      __dispatch(name,res, data) {\n        this.$emit && this.$emit(name, res, data);\n      },\n      __find(str) {\n        let dq = document.querySelector('#vciu-modal-' + this.formID);\n        return dq.querySelector(str);\n      },\n      dragover() {\n        let element = this.$refs.container;\n        element.classList.add('is-dragover');\n      },\n      dragleave() {\n        let element = this.$refs.container;\n        element.classList.remove('is-dragover');\n      },\n      change(e) {\n        let fileVal = document.querySelector('#g-core-upload-input-' + this.formID).value.replace(/C:\\\\fakepath\\\\/i, \"\");\n        let fileExt = fileVal.substring(fileVal.lastIndexOf(\".\") + 1);\n        const extensionsArr = this.extensions.split(',');\n        if(extensionsArr.length) {\n            var reg = new RegExp('^(?:' + extensionsArr.join('|') + ')$','i');\n            if (!reg.test(fileExt)) {\n                return this.__dispatch('errorhandle','TYPE ERROR');\n            }\n        }\n\n        if (Array.prototype.slice.call(e.target.files).some(file => file.size > this.maxFileSize)) {\n            var formatSize;\n            if (parseInt(this.maxFileSize / 1024 / 1024) > 0) {\n                formatSize = (this.maxFileSize / 1024 / 1024).toFixed(2) + 'MB';\n            } else if (parseInt(this.maxFileSize / 1024) > 0) {\n                formatSize = (this.maxFileSize / 1024).toFixed(2) + 'kB';\n            } else {\n                formatSize = options.maxFileSize.toFixed(2) + 'Byte';\n            }\n            console.warn('FILE IS TOO LARGER MAX FILE IS ' + formatSize);\n            return this.__dispatch('errorhandle','FILE IS TOO LARGER MAX FILE IS ' + formatSize);\n        }\n\n        if (this.multipleSize > 0 && e.target.files.length > this.multipleSize) {\n              console.warn('FILE NUM IS LARGER THAN ' + this.multipleSize);\n              return this.__dispatch('errorhandle', 'FILE NUM OVERLOAD');\n        }\n\n        this.files = e.target.files;\n        if (this.crop || this.resize) {\n          this.__showImage();\n          return;\n        }\n        this. __dispatch('imagechanged', this.files.length > 1 ? this.files : this.files[0]);\n        if (this.compress && this.files[0]['type'] !== 'image/png' && this.files[0]['type'] !== 'image/gif') {\n          canvasHelper.compress(this.files[0], 100 - this.compress, (code) => {\n            this.tryAjaxUpload('', true, code);\n          });\n        } else {\n          this.tryAjaxUpload();\n        }\n      },\n      __showImage() {\n        this.hasImage = true;\n        this.__readFiles();\n      },\n\n      __readFiles() {\n        let reader = new FileReader();\n        let self = this;\n        reader.onload = function(e) {\n          let src = e.target.result;\n          overflowVal = document.body.style.overflow;\n          document.body.style.overflow = 'hidden';\n          self.__initImage(src);\n        }\n        reader.readAsDataURL(this.files[0]);\n      },\n\n      // set the image size\n      __initImage(src) {\n        let pic = new Image();\n        let self = this;\n        pic.src = src;\n        const cropBox = this.$refs.cropBox;\n        pic.onload= function() {\n          self.image.minProgress = self.minWidth / pic.naturalWidth;\n          canvasHelper.init(src, (src) => {\n            self.imgChangeRatio = cropBox.setImage(src, pic.naturalWidth, pic.naturalHeight);\n          });\n        }\n      },\n\n      resizeImage(progress) {\n        const cropBox = this.$refs.cropBox;\n        cropBox.resizeImage(progress);\n      },\n\n      doRotate(e) {\n        let self = this;\n        const cropBox = this.$refs.cropBox;\n        const targetImage = cropBox.getCropImage();\n        this.data.compress = 100 - this.compress;\n        return canvasHelper.rotate(targetImage, 1, (src) => {\n            self.__initImage(src)\n          })\n      },\n\n      doReverseRotate(e) {\n        let self = this;\n        const cropBox = this.$refs.cropBox;\n        const targetImage = cropBox.getCropImage();\n        this.data.compress = 100 - this.compress;\n        return canvasHelper.rotate(targetImage, -1, (src) => {\n            self.__initImage(src)\n          })\n      },\n\n      doCrop(e) {\n        this.__setData('crop');\n        const cropBox = this.$refs.cropBox;\n        const upload = this.__setUpload(e.target);\n        if (this.crop === 'local') {\n          const targetImage = cropBox.getCropImage();\n          this.data.compress = 100 - this.compress;\n          return canvasHelper.crop(targetImage, this.data, (code) => {\n            upload(code);\n            this.__dispatch('imagechanged', code);\n          })\n        }\n        upload();\n      },\n\n      doResize(e) {\n        this.__setData('resize');\n        const cropBox = this.$refs.cropBox;\n        const upload = this.__setUpload(e.target);\n        if (this.resize === 'local') {\n          const targetImage = cropBox.getCropImage();\n          this.data.compress = 100 - this.compress;\n          return canvasHelper.resize(targetImage, this.data, (code) => {\n            upload(code);\n            this.__dispatch('imagechanged', code);\n          })\n        }\n        upload();\n      },\n\n      __setData(type) {\n        if (typeof this.data !== 'object') {\n          this.data = {};\n        }\n        this.data[\"request\"] = type;\n        const cropBox = this.$refs.cropBox;\n        const newCSSObj = cropBox.getCropData();\n        for (const k of Object.keys(newCSSObj)) {\n          this.data[k] = newCSSObj[k];\n        }\n        if (this.maxWidth) {\n          this.data['maxWidth'] = this.maxWidth;\n        }\n        if (this.maxHeight) {\n          this.data['maxHeight'] = this.maxHeight;\n        }\n        if (this.minWidth) {\n          this.data['minWidth'] = this.minWidth;\n        }\n      },\n\n      __setUpload(btn) {\n        const upload = (code) => {\n          btn.value = btn.value + '...';\n          btn.disabled = true;\n          this.tryAjaxUpload(() => {\n            btn.value = btn.value.replace('...','');\n            btn.disabled = false;\n          }, code ? true: false, code);\n        };\n        return upload;\n      },\n\n      cancel() {\n        this.hasImage = false;\n        document.body.style.overflow = overflowVal;\n        this.files = '';\n        const cropBox = this.$refs.cropBox;\n        cropBox.setOriginalSrc(null);\n        document.querySelector('#g-core-upload-input-' + this.formID).value = '';\n      },\n\n      // use ajax upload  IE10+\n      tryAjaxUpload(callback, isBinary, base64Code) {\n        const self = this;\n        this. __dispatch('imageuploading',this.files[0]);\n        const done = function(res) {\n          if(typeof callback === 'function') {\n            callback();\n          }\n          self.uploading = false;\n          self.cancel();\n          self.__dispatch('imageuploaded',res, self.data);\n        };\n        const errorUpload = function(err) {\n          self.__dispatch('errorhandle', err);\n        };\n        if (!this.isXhr) {\n          if(this.crop) {\n            this.hasImage = false;\n          }\n          return typeof callback === 'function' && callback();\n        }\n        let data;\n        if (isBinary) {\n          data = {\n            type: this.files[0]['type'],\n            filename: this.files[0]['name'],\n            filed: this.inputOfFile,\n            base64Code: base64Code\n          };\n          if (typeof this.data === 'object') {\n            data = Object.assign(this.data, data);\n          }\n        } else {\n          data = new FormData();\n          for (let i=0;i<this.files.length;i++) {\n            data.append(this.name, this.files[i]);\n          }\n          if (typeof this.data === 'object') {\n            for(let k in this.data) {\n              if(this.data[k] !== undefined) {\n                data.append(k,this.data[k]);\n              }\n            }\n          }\n        }\n        xhr('POST',this.url, this.headers, data, done, errorUpload, isBinary, this.credentials);\n      },\n    },\n\n  };\n\n</script>\n"],"sourceRoot":""}]}