{"remainingRequest":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\src\\components\\BestellungenMa.vue?vue&type=template&id=6fcbc3da&scoped=true","dependencies":[{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\src\\components\\BestellungenMa.vue","mtime":1610450325650},{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\src\\components\\BestellungenMa.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div v-if=\"!ausgewaehlt\">\r\n      <h1>{{ msg }}</h1>\r\n      <hr>\r\n      <form class=\"form-group\">\r\n        <div class=\"form-inline form-group\">\r\n          <div class=\"form-group\">\r\n            <select v-model=\"bestellungsauswahl\" class=\"form-control\">\r\n              <option value=\"\" disabled selected>Filter Bestellungen</option>\r\n              <option\r\n                  v-for=\"(bestellung, index) in bestellungstypen\"\r\n                  :key=\"index\"\r\n                  :value=\"bestellung\"\r\n              >\r\n                {{ bestellung }}\r\n              </option>\r\n            </select>\r\n            <div class=\"form-group mx-sm-3\">\r\n              <button @click=\"update()\" type=\"button\" class=\"btn btn-primary\">Bestellungen Aktualisieren</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-inline form-group\">\r\n          <div class=\"form-group\">\r\n            <datepicker-lite\r\n                :value-attr=\"datepickerSetting.value\"\r\n                :year-minus=\"datepickerSetting.yearMinus\"\r\n                :from=\"datepickerSetting.from\"\r\n                :to=\"datepickerSetting.to\"\r\n                :disabled-date=\"datepickerSetting.disabledDate\"\r\n                :locale=\"datepickerSetting.locale\"\r\n                @value-changed=\"datepickerSetting.changeEvent\"\r\n                class-attr=\"form-control\"\r\n            />\r\n            <datepicker-lite\r\n                :value-attr=\"datepickerSetting2.value\"\r\n                :year-minus=\"datepickerSetting2.yearMinus\"\r\n                :from=\"datepickerSetting2.from\"\r\n                :to=\"datepickerSetting2.to\"\r\n                :disabled-date=\"datepickerSetting2.disabledDate\"\r\n                :locale=\"datepickerSetting2.locale\"\r\n                @value-changed=\"datepickerSetting2.changeEvent\"\r\n                class-attr=\"form-control mx-sm-3\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-inline form-group\">\r\n          <div class=\"form-group\">\r\n            <input class=\"form-control\" type=\"text\" placeholder=\"Nach BNR suchen\" v-model=\"bnr\">\r\n            <input class=\"form-control mx-sm-3\" type=\"text\" placeholder=\"Nach Vorname suchen\" v-model=\"vorname\">\r\n            <input class=\"form-control\" type=\"text\" placeholder=\"Nach Nachname suchen\" v-model=\"nachname\">\r\n            <button class=\"btn btn-primary mx-sm-3\" @click=\"suchen()\" type=\"button\">Suchen</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div class=\"table-responsive form-group\">\r\n        <table class=\"table\">\r\n          <thead>\r\n          <tr>\r\n            <th>BNR</th>\r\n            <th>Startdatum</th>\r\n            <th>Enddatum</th>\r\n            <th>Auto</th>\r\n            <th>Vorname</th>\r\n            <th>Nachname</th>\r\n            <th>Erstelldatum</th>\r\n            <th>Status</th>\r\n            <th>Bearbeiten</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr v-for=\"(bestellung, index) in gesuchteBestellungen\" :key=\"index\" :class=\"getClass(bestellung)\">\r\n            <td>{{ bestellung.bnr }}</td>\r\n            <td>{{ bestellung.startdatum }}</td>\r\n            <td>{{ bestellung.enddatum }}</td>\r\n            <td>{{ bestellung.auto_fk }}</td>\r\n            <td>{{ bestellung.vorname }}</td>\r\n            <td>{{ bestellung.nachname }}</td>\r\n            <td>{{ bestellung.zeitstempel }}</td>\r\n            <td>{{ status(bestellung.status) }}</td>\r\n            <td>\r\n              <button class=\"btn btn-primary\" @click=\"editingOrder(bestellung.bnr)\">Weiter</button>\r\n            </td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button class=\"btn btn-secondary\" @click=\"home()\">Zurück</button>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <h1>{{ msg }}</h1>\r\n      <hr>\r\n      <div class=\"form-group\">\r\n        <h3>Auto: {{ gewaehlteBestellung.auto_fk }}</h3>\r\n        <h3>Kunde: {{ gewaehlteBestellung.vorname }} {{ gewaehlteBestellung.nachname }}</h3>\r\n        <h3>Email: {{ gewaehlteBestellung.user }}</h3>\r\n        <h3>Adresse: {{ gewaehlteBestellung.adresse }}</h3>\r\n        <h3>Telefon: {{ gewaehlteBestellung.telefon }}</h3>\r\n        <h3>Mietzeitraum: {{ gewaehlteBestellung.startdatum }} - {{ gewaehlteBestellung.enddatum }}</h3>\r\n      </div>\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table\">\r\n          <thead>\r\n          <tr>\r\n            <th>Kosten</th>\r\n            <th>Beschreibung</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr v-for=\"(kosten, index) in bestellkosten\" :key=\"index\">\r\n            <td>{{ kosten.menge }}€</td>\r\n            <td>{{ kosten.beschreibung }}</td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <br/>\r\n      <h3>Gesamtkosten: {{ gesamtkosten }}€</h3>\r\n      <div class=\"actions form-group\">\r\n        <button class=\"btn btn-secondary\" type=\"cancel\" @click=\"back\">Zurück zur Suche</button>\r\n        <div v-if=\"(gewaehlteBestellung.status==0 || gewaehlteBestellung.status==1)\">\r\n          <button class=\"btn btn-danger\" @click=\"abbrechen(gewaehlteBestellung.bnr, 0)\"\r\n                  :disabled=\"gewaehlteBestellung.status!=0 && gewaehlteBestellung.status!=1 && auto.ausgeliehen !=0\">\r\n            Abbrechen\r\n          </button>\r\n        </div>\r\n        <div v-if=\"gewaehlteBestellung.status==0\">\r\n          <button class=\"btn btn-success\" @click=\"acceptOrder(gewaehlteBestellung.bnr)\"\r\n                  :disabled=\"gewaehlteBestellung.status!=0\">Bestaetigen\r\n          </button>\r\n        </div>\r\n        <div v-if=\"auto.ausgeliehen == 0 && gewaehlteBestellung.status==1\">\r\n          <button @click=\"ausleihen(auto.name, gewaehlteBestellung.bnr)\">Auto ausleihen</button>\r\n        </div>\r\n        <div v-if=\"gewaehlteBestellung.status==5 && auto.ausgeliehen == 1\">\r\n          <button class=\"btn btn-warning\" @click=\"rueckgabe(gewaehlteBestellung.bnr)\">Auto zurückgeben</button>\r\n        </div>\r\n        <div\r\n            v-if=\"(auto.ausgeliehen == 1 && gewaehlteBestellung.status==6) || (auto.ausgeliehen == 0 && gewaehlteBestellung.status==2)\">\r\n          <button class=\"btn btn-primary\" @click=\"finishOrder(gewaehlteBestellung.bnr)\">Abschließen</button>\r\n        </div>\r\n        <div v-if=\"gewaehlteBestellung.status!=3 && gewaehlteBestellung.status!=4\">\r\n          <button class=\"btn btn-info\" @click=\"showDamage(gewaehlteBestellung)\">Anzeigen Offener Autoprobleme</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n// Hier wird fuer Mitarbeiter/Admin alles bzgl. Bestellungen angezeigt/definiert\r\nimport UserService from \"../services/user.service\";\r\nimport Auth from \"../services/auth.service\";\r\nimport Helper from \"../services/helper.service\";\r\nimport DatepickerLite from \"./DatepickerLite.vue\";\r\nexport default {\r\n    data(){\r\n        return{\r\n            ausgewaehlt: false,\r\n            msg: '',\r\n            bestellungen: [],\r\n            gesuchteBestellungen: [],\r\n            gewaehlteBestellung: '',\r\n            schaeden: [],\r\n            bestellkosten: [],\r\n            class: '',\r\n            bestellungsauswahl: '',\r\n            bestellungstypen: [],\r\n            auto: '',\r\n            bnr: '',\r\n            vorname: '',\r\n            nachname: '',\r\n            erstelldatum: '',\r\n            start: '',\r\n            ende: '',\r\n            datepickerSetting : {\r\n                value:\"\",\r\n                yearMinus: 0,\r\n                from: \"\",\r\n                to: \"1999/01/01\",\r\n                disabledDate: [],\r\n                locale: {\r\n                format: \"YYYY/MM/DD\",\r\n                weekday: [\"Son\", \"Mon\", \"Dien\", \"Mit\", \"Don\", \"Frei\", \"Sam\"],\r\n                todayBtn: \"Heute\",\r\n                clearBtn: \"Löschen\",\r\n                closeBtn: \"Schliessen\",\r\n                },\r\n                changeEvent: (value) => {\r\n                    this.start = value\r\n                }\r\n            },\r\n            //enddatum\r\n            datepickerSetting2 : {\r\n                value: \"\",\r\n                yearMinus: 0,\r\n                from: \"\",\r\n                to: \"1999/01/01\",\r\n                disabledDate: [],\r\n                locale: {\r\n                format: \"YYYY/MM/DD\",\r\n                weekday: [\"Son\", \"Mon\", \"Dien\", \"Mit\", \"Don\", \"Frei\", \"Sam\"],\r\n                todayBtn: \"Heute\",\r\n                clearBtn: \"Löschen\",\r\n                closeBtn: \"Schliessen\",\r\n                },\r\n                changeEvent: (value) => {\r\n                    this.ende = value\r\n                }\r\n            }\r\n        }\r\n    },\r\n    components: {\r\n        DatepickerLite\r\n    },\r\n    methods: {\r\n        // daten neu laden bzw. bestimmte bestellungstypen anzeigen\r\n        update(){\r\n            if(this.bestellungsauswahl == ''){\r\n                alert(\"Bitte wählen Sie einen Filter aus\")\r\n                return\r\n            }\r\n            this.bestellungen = []\r\n            this.gesuchteBestellungen = []\r\n            let typ = -1\r\n            if (this.bestellungsauswahl == \"Offene Bestellanfragen\") typ = 0\r\n            else if(this.bestellungsauswahl == \"Bestellungshistorie\") typ = 7 //3 u. 4\r\n            else if(this.bestellungsauswahl == \"Offene Bezahlung\") typ = 2\r\n            else if(this.bestellungsauswahl == \"Ueberzogene Bestellungen\") typ = 5\r\n            else if(this.bestellungsauswahl == \"Bestaetigte Bestellungen\") typ = 1\r\n            else if(this.bestellungsauswahl == \"Laufende Bestellungen\") typ = 6\r\n            else if(this.bestellungsauswahl == \"Doppelte Bestellungen\") typ = 10\r\n            else if(this.bestellungsauswahl == \"Alle Bestellungen\") typ = 8\r\n            this.holeBestellungen(typ)\r\n        },\r\n        // bestimmte bestellungen suchen\r\n        suchen(){\r\n            this.gesuchteBestellungen = this.bestellungen.filter((bestellung) => {\r\n                let bnr = false;\r\n                let name = false\r\n                let datum = false\r\n                let startdatum = new Date(this.start)\r\n                let enddatum = new Date(this.ende)\r\n                let zeitstempel = new Date(bestellung.zeitstempel)\r\n                if (this.bnr == \"\") {\r\n                    bnr = true;\r\n                } else {\r\n                    bnr = bestellung.bnr == this.bnr;\r\n                }\r\n\r\n                if (this.vorname == \"\" || this.nachname == \"\") {\r\n                    name = true\r\n                } else name = (\r\n                    this.vorname.toLowerCase().split(\" \").every((v) => bestellung.vorname.toLowerCase().includes(v)) &&\r\n                    this.nachname.toLowerCase().split(\" \").every((v) => bestellung.nachname.toLowerCase().includes(v))\r\n                )\r\n                if((this.start == '' && this.ende == '') || (startdatum.getTime() > enddatum.getTime())){\r\n                    datum = true\r\n                }\r\n                else if(this.ende == ''){\r\n                    if(startdatum.getTime() == zeitstempel.getTime()){\r\n                        datum = true\r\n                    }\r\n                    else{\r\n                        datum = false\r\n                    }\r\n                }\r\n                else if(this.start == ''){\r\n                    if(enddatum.getTime() == zeitstempel.getTime()){\r\n                        datum = true\r\n                    }\r\n                    else{\r\n                        datum = false\r\n                    }\r\n                }\r\n                else{\r\n                    if((startdatum.getTime() <= zeitstempel.getTime()) && (enddatum.getTime() >= zeitstempel.getTime())){\r\n                        datum = true\r\n                    }\r\n                    else{\r\n                        datum = false\r\n                    }\r\n                }\r\n                return (bnr && name && datum)\r\n            })\r\n        },\r\n        // zurueck zur allgemeinen Bestellueubersicht\r\n        back() {\r\n            this.ausgewaehlt = false;\r\n            this.msg = \"Alle Bestellungen\"\r\n            this.$router.push(\"/admin/bestellungen\")\r\n        },\r\n        home() {\r\n            this.$router.push(\"/admin\")\r\n        },\r\n        showDamage(bestellung){\r\n            // vor bestaetigung behandlung schaeden\r\n            if(bestellung.status == 0){\r\n                Helper.redirect(\"/admin/\"+bestellung.auto_fk+\"/schaden\");\r\n            }\r\n            // offene oder zeitlich ueberfaellige bestellungen\r\n            else if(bestellung.status == 1 || bestellung.status == 6 || bestellung.status == 5 || bestellung.status == 2){\r\n                 Helper.redirect(\"/admin/\"+bestellung.auto_fk+\"/schaden\" + \"/\" + bestellung.bnr);\r\n            }\r\n        },\r\n          abbrechen(bnr, skip, auto, bestellkosten) {\r\n            let bestaetigen = false \r\n            if(!skip){\r\n                bestaetigen = confirm(\"Moechten Sie die Bestellung BNR: \" + bnr + \" wirklich abbrechen?\")\r\n            } \r\n            else{\r\n                bestaetigen = true  \r\n            }\r\n            if(bestaetigen){\r\n                let bestellung = 0\r\n                 if(this.$route.params.bnr != ''){\r\n                    bestellung = this.gewaehlteBestellung\r\n                    bestellkosten = this.bestellkosten\r\n                    auto = this.auto\r\n                }\r\n                else{\r\n                    bestellung = this.bestellungen.find((element) => element.bnr == bnr)\r\n                }             \r\n                // wenn vor ausleihe des autos vor ort probleme mit kunden (z.b. kann nicht bezahlen), dann abbruch mit strafzahlung\r\n                if(auto != null && auto.ausgeliehen == 0 && bestellung.status == 1){\r\n                    //Strafe in Form von 30% der Bestellkosten des zu mietenden Autos \r\n                    let kosten = 0\r\n                    for(let i =0; i< bestellkosten.length; i++){\r\n                        if(bestellkosten[i].typ == 0){\r\n                            kosten = bestellkosten[i].menge\r\n                            break\r\n                        }\r\n                    }\r\n                    if(!skip) alert(\"Es wird wegen der kurzfristign Absage eine Strafzahlung in Hoehe von \" + ((kosten/100)*30) + \"€ faellig\")\r\n                    bestellung.status = 2\r\n                    Auth.updateStatusOrder(bnr, 2)\r\n                        .then((response) =>{\r\n                            if(response.data.success){\r\n                                    Auth.addCost(bnr, 2, ((kosten/100)*30), 'Strafkosten fuer Problem bei Abholung des Autos')\r\n                                    .then((response) =>{\r\n                                        if(response.data.success){\r\n                                            if(this.$route.params.bnr != ''){\r\n                                                // daten aktualisieren, indem in array eingefuegt\r\n                                                this.bestellkosten.push(response.data.cost)\r\n                                            }\r\n                                            // Standarkosten loeschen, da Kunde nie auto ausgeliehen hat\r\n                                            Auth.deleteCost(bnr, 0, null)\r\n                                            .then((response) =>{\r\n                                                if(response.data.success){\r\n                                                     if(this.$route.params.bnr != ''){\r\n                                                        // daten aktualisieren, indem aus array geloescht \r\n                                                        for(let i=0; i<this.bestellkosten.length;i++){\r\n                                                            if(this.bestellkosten[i].typ == 0){\r\n                                                                this.bestellkosten.splice(i,1)\r\n                                                                break\r\n                                                            }\r\n                                                        }\r\n                                                     }\r\n                                                }\r\n                                            })\r\n                                            .catch((error) => {\r\n                                                Helper.handle(error)\r\n                                                this.ausgewaehlt = false;\r\n                                                this.msg = \"Alle Bestellungen\"\r\n                                                Helper.redirect(\"/admin/bestellungen\");\r\n                                            })\r\n                                        }\r\n                                    })\r\n                                    .catch((error) => {\r\n                                        Helper.handle(error)\r\n                                        this.ausgewaehlt = false;\r\n                                        this.msg = \"Alle Bestellungen\"\r\n                                        Helper.redirect(\"/admin/bestellungen\");\r\n                                        })\r\n                            }\r\n                            })\r\n                            .catch((error) => {\r\n                            Helper.handle(error)\r\n                            this.ausgewaehlt = false;\r\n                            this.msg = \"Alle Bestellungen\"\r\n                            Helper.redirect(\"/admin/bestellungen\");\r\n                    })\r\n                }\r\n                else{\r\n                    Auth.updateStatusOrder(bnr, 3)\r\n                    .then(response =>{\r\n                        if(response.data.success){\r\n                            if(this.$route.params.bnr != \"\"){\r\n                                this.gewaehlteBestellung.status = 3\r\n                            }\r\n                            this.bestellungen.find(\r\n                            (element) => element.bnr == bnr).status = 3\r\n                            if(!skip) alert(\"Bestellung wurde erfolgreich abgebrochen.\")\r\n                            this.ausgewaehlt = false\r\n                            this.msg = \"Alle Bestellungen\"\r\n                            Helper.redirect(\"/admin/bestellungen\");\r\n                            return\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        Helper.handle(error)\r\n                        this.ausgewaehlt = false\r\n                        this.msg = \"Alle Bestellungen\"\r\n                        Helper.redirect(\"/admin/bestellungen\");\r\n                        return\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        //Bestellung akzeptieren --> 0 zu 1\r\n        acceptOrder(bnr){\r\n            let bestellung = this.bestellungen.find(\r\n            (element) => element.bnr == bnr)\r\n            let date = bestellung\r\n            //ueberpruefung, ob doppelte bestellungen\r\n            if(bestellung.doppelt){\r\n                let doppelt = [bestellung]\r\n                for(let i=0;i<this.bestellungen.length;i++){\r\n                    if(bestellung.bnr == this.bestellungen[i].bnr){\r\n                        continue\r\n                    }\r\n                    else if(bestellung.auto_fk == this.bestellungen[i].auto_fk && this.bestellungen[i].doppelt){\r\n                        doppelt.push(this.bestellungen[i])\r\n                    }\r\n                }\r\n                for(let i=1;i<doppelt.length;i++){\r\n                    alert(\"Die Bestellung BNR: \" + doppelt[i].bnr + \" ueberschneidet sich mit dieser Bestellung\")\r\n                }\r\n                for(let i=1;i<doppelt.length-1;i++){\r\n                    let d1 = new Date(doppelt[i].zeitstempel) \r\n                    let d2 = new Date(doppelt[i+1].zeitstempel) \r\n                    if(d1.getTime() < d2.getTime()){\r\n                        date = doppelt[i]\r\n                    }\r\n                    else{\r\n                        date = doppelt[i+1]\r\n                    }\r\n                }\r\n                if(confirm(\"Soll die frueheste Bestellung BNR: \" +  date.bnr +\" akzeptiert und automatisch die anderen Anfragen abgebrochen werden?\")){\r\n                    doppelt.forEach(async (item) => {\r\n                        if(item.bnr == date.bnr){\r\n                            return\r\n                        }\r\n                        await this.abbrechen(item.bnr, 1, null, 0)\r\n                    })\r\n                }\r\n                else{\r\n                    return\r\n                }   \r\n            }\r\n            UserService.getSchaeden(date.auto_fk)\r\n                .then((response) => {\r\n                    // wenn kein schaden, dann kann bestellung bestaetigt werden\r\n                    if(response.data.success){\r\n                        Auth.updateStatusOrder(date.bnr, 1)\r\n                        .then((response) =>{\r\n                            if(response.data.success){\r\n                                this.bestellungen.find(\r\n                                (element) => element.bnr == date.bnr).status = 1\r\n                                alert(\"Bestellung wurde erfolgreich bestaetigt.\")\r\n                                this.ausgewaehlt = false\r\n                                this.msg = \"Alle Bestellungen\"\r\n                                Helper.redirect(\"/admin/bestellungen\");\r\n                                return\r\n                            }\r\n                        })\r\n                            .catch((error) => {\r\n                            Helper.handle(error)\r\n                            this.ausgewaehlt = false\r\n                            this.msg = \"Alle Bestellungen\"\r\n                            Helper.redirect(\"/admin/bestellungen\");\r\n                            return\r\n                        })\r\n                    }\r\n                    // offene schaeden sind vorhanden\r\n                    else{\r\n                        let val = false\r\n                        this.schaeden.push.apply(this.schaeden, response.data.cardamage)\r\n                        for(let i=0;i<this.schaeden.length;i++){\r\n                                if(this.schaeden[i].prioritaet == 0){\r\n                                if(confirm(\"Das Auto kann nicht ausgeliehen werden wegen offener fataler Probleme.\\nMoechten Sie diese jetzt bearbeiten?\")){\r\n                                    val = true\r\n                                    Helper.redirect(\"/admin/\" + date.auto_fk + \"/schaden\");\r\n                                    return\r\n                                }\r\n                                val = true\r\n                                return\r\n                            }\r\n                        }\r\n                        if(!val){\r\n                            if(confirm(\"Es bestehen noch offene Probleme, die aber nicht fatal sind. Moechten Sie die Bestellung bestaetigen\")){    \r\n                                Auth.updateStatusOrder(date.bnr, 1)\r\n                                    .then((response) =>{\r\n                                        if(response.data.success){\r\n                                            this.bestellungen.find(\r\n                                            (element) => element.bnr == date.bnr).status = 1\r\n                                            alert(\"Bestellung wurde erfolgreich bestaetigt.\")\r\n                                            Helper.redirect(\"/admin/bestellungen\");\r\n                                            this.ausgewaehlt = false\r\n                                            this.msg = \"Alle Bestellungen\"\r\n                                            return\r\n                                        }\r\n                                    })\r\n                                    .catch((error) => {\r\n                                        Helper.handle(error)\r\n                                        this.ausgewaehlt = false\r\n                                        this.msg = \"Alle Bestellungen\"\r\n                                        Helper.redirect(\"/admin/bestellungen\");\r\n                                        return\r\n                                    })\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    Helper.handle(error)\r\n                    this.ausgewaehlt = false\r\n                    this.msg = \"Alle Bestellungen\"\r\n                    Helper.redirect(\"/admin/bestellungen\");\r\n                })\r\n        },\r\n\r\n        finishOrder(bnr){\r\n            if(confirm(\"Moechten Sie die Bestellung wirklich abschliessen? Haben Sie auch das Auto auf neue Schaeden begutachtet?\")){\r\n                let zusatz = 0\r\n                let bestaetigen = false\r\n                for(let i=0; i<this.bestellkosten.length;i++){\r\n                    if(this.bestellkosten[i].typ != 0){\r\n                        zusatz += this.bestellkosten[i].menge\r\n                    }\r\n                }\r\n                if(zusatz > 0){\r\n                    if(confirm(\"Es sind noch offene Zusatzkosten in Hoehe von \" + zusatz + \"€ zu zahlen.\\nWurden diese bezahlt?\")){\r\n                        bestaetigen = true\r\n                    }\r\n                    else{\r\n                        bestaetigen = false\r\n                    }\r\n                }\r\n                else{\r\n                    bestaetigen = true\r\n                }\r\n                if(bestaetigen){\r\n                    Auth.updateStatusOrder(bnr, 4)\r\n                    .then((response) =>{\r\n                        if(response.data.success){\r\n                            Auth.updateAusleiheAuto(this.auto.name, 0)\r\n                            .then((response) =>{\r\n                                if(response.data.success){\r\n                                    this.gewaehlteBestellung.status = 4\r\n                                    this.auto.ausgeliehen = 0\r\n                                    alert(\"Auto wurde erfolgreich zurückgegeben\")\r\n                                    return\r\n                                }\r\n                            })\r\n                            .catch((error) => {\r\n                                Helper.handle(error)\r\n                                this.ausgewaehlt = false\r\n                                this.msg = \"Alle Bestellungen\"\r\n                                Helper.redirect(\"/admin/bestellungen\");\r\n                                return\r\n                            })  \r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        Helper.handle(error)\r\n                        this.ausgewaehlt = false\r\n                        this.msg = \"Alle Bestellungen\"\r\n                        Helper.redirect(\"/admin/bestellungen\");\r\n                        return\r\n                    })  \r\n                }\r\n                else if(this.gewaehlteBestellung.status != 2){\r\n                    this.rueckgabe(bnr)\r\n                }\r\n            }\r\n        },\r\n        // 5 zu 2, um weitere Verspaetungsgebuehren zu verhindern bzw. wenn Zusatzkosten nicht direkt durch Kunden bezahlt werden koennen (1-->2)\r\n        rueckgabe(bnr){\r\n          if(confirm(\"Wurde das Auto wirklick vom Kunden zurückgegeben?\")){                \r\n            Auth.updateStatusOrder(bnr, 2)\r\n            .then((response) =>{\r\n                if(response.data.success){\r\n                    Auth.updateAusleiheAuto(this.auto.name, 0)\r\n                    .then((response) =>{\r\n                        if(response.data.success){\r\n                            this.gewaehlteBestellung.status = 2\r\n                            this.auto.ausgeliehen = 0\r\n                            alert(\"Auto wurde erfolgreich zurückgegeben\")\r\n                            return\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        Helper.handle(error)\r\n                        this.ausgewaehlt = false\r\n                        this.msg = \"Alle Bestellungen\"\r\n                        Helper.redirect(\"/admin/bestellungen\");\r\n                        return\r\n                    })  \r\n                }\r\n            })\r\n            .catch((error) => {\r\n                Helper.handle(error)\r\n                this.ausgewaehlt = false\r\n                this.msg = \"Alle Bestellungen\"\r\n                Helper.redirect(\"/admin/bestellungen\");\r\n                return\r\n            })  \r\n          }\r\n        },\r\n        // mitarbeiter bestaetigt dies, wenn auto ausgeliehen u. kunde standarkosten vor ort bezahlt hat\r\n        ausleihen(auto, bnr){\r\n            let gesamt = 0\r\n            for(let i=0; i<this.bestellkosten.length;i++){\r\n                gesamt += this.bestellkosten[i].menge\r\n            }\r\n            if(confirm(\"Wurden die Kosten in Hoehe von \" + gesamt + \"€ bezahlt und ist das Auto bereit fuer die Ausleihe?\")){\r\n                Auth.updateAusleiheAuto(auto, 1)\r\n                .then((response) =>{\r\n                    if(response.data.success){\r\n                        Auth.updateStatusOrder(this.gewaehlteBestellung.bnr, 6)\r\n                        .then((response) =>{\r\n                            if(response.data.success){\r\n                                this.bestellungen.find(\r\n                                (element) => element.bnr == bnr).status = 6\r\n                                 alert(\"Das Auto kann nun ausgeliehen werden\")\r\n                                this.auto.ausgeliehen = 1\r\n                                return\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            Helper.handle(error)\r\n                            this.ausgewaehlt = false\r\n                            this.msg = \"Alle Bestellungen\"\r\n                            Helper.redirect(\"/admin/bestellungen\");\r\n                            return\r\n                        })  \r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    Helper.handle(error)\r\n                    this.ausgewaehlt = false\r\n                    this.msg = \"Alle Bestellungen\"\r\n                    Helper.redirect(\"/admin/bestellungen\");\r\n                    return\r\n                })  \r\n            }\r\n        },\r\n        // test, ob bestellungen mehrfach vorhanden sind\r\n        testdoppelt(){\r\n             let verglichen = []\r\n             for(let i=0; i < this.bestellungen.length-1; i++){\r\n                let value = false\r\n                if (this.bestellungen[i].status != 0){\r\n                    continue\r\n                }\r\n                for(let j=0; j < verglichen.length; j++){\r\n                    if(verglichen[j].auto_fk == this.bestellungen[i].auto_fk){\r\n                        value = true\r\n                        break\r\n                    }\r\n                }\r\n                if(value){\r\n                    continue\r\n                }\r\n                verglichen.push(this.bestellungen[i]) \r\n                if(this.bestellungen[i].status == 0){\r\n                        for(let h=i+1; h < this.bestellungen.length; h++){\r\n                            if((this.bestellungen[i].auto_fk == this.bestellungen[h].auto_fk) && (this.bestellungen[h].status == 0)){\r\n                                verglichen.push(this.bestellungen[h])\r\n                                let startdatum = new Date(this.bestellungen[i].startdatum)\r\n                                let enddatum = new Date(this.bestellungen[i].enddatum)\r\n                                let von = new Date(this.bestellungen[h].startdatum)\r\n                                let bis = new Date(this.bestellungen[h].enddatum)\r\n                                if(((startdatum.getTime() <= von.getTime()) && (enddatum.getTime() >= von.getTime())\r\n                                    ||((startdatum.getTime() <= bis.getTime()) && (enddatum.getTime() >= bis.getTime()))\r\n                                    ||((startdatum.getTime() >= von.getTime()) && (enddatum.getTime() <= bis.getTime())))){\r\n                                    this.bestellungen[i].doppelt = true\r\n                                    this.bestellungen[h].doppelt = true\r\n                                }\r\n                            }\r\n                        }\r\n                }else{\r\n                    continue\r\n                }\r\n            }\r\n        },\r\n        // geladene Bestellungen werden geprueft, ob sie offen, aber schon abgelaufen sind --> automatisch abgebrochen\r\n        async testAbgelaufen(){\r\n            this.bestellungen.forEach(async (item) => {\r\n                let heute = new Date(new Date().setHours(0,0,0,0));\r\n                let start = new Date(item.startdatum)\r\n                if(start.getTime() <= heute.getTime() && item.status == '0'){\r\n                    await this.abbrechen(item.bnr, 1, null, 0)\r\n                }\r\n            })\r\n            return\r\n        },\r\n        // geladene Bestellungen werden geprueft, ob sie laufend sind, aber auto noch nicht abgeholt wurde sind --> automatisch abgebrochen mit strafe\r\n        async testNichtAngetreten(){\r\n            this.bestellungen.forEach(async (item) => {\r\n                let heute = new Date(new Date().setHours(0,0,0,0));\r\n                let start = new Date(item.startdatum)\r\n                start.setDate(start.getDate() + 1);\r\n                UserService.getCar(item.auto_fk)\r\n                .then(response =>{\r\n                    let auto = response.data.car \r\n                    // wenn datum 1 tag nach startdatum autobestellung\r\n                    if(start.getTime() <= heute.getTime() && item.status == '1'){\r\n                         let bestellkosten = []\r\n                         UserService.getOrderCost(item.bnr)\r\n                        .then((response) => {\r\n                            response.data.costs.forEach((cost) => {\r\n                                bestellkosten.push(cost)\r\n                            })\r\n                            this.abbrechen(item.bnr, 1, auto, bestellkosten)\r\n                        })\r\n                        .catch((error) => {\r\n                            Helper.handle(error)\r\n                            this.ausgewaehlt = false\r\n                            this.msg = \"Alle Bestellungen\"\r\n                            Helper.redirect(\"/admin/bestellungen/\");\r\n                        })\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    Helper.handle(error)\r\n                    this.ausgewaehlt = false\r\n                    this.msg = \"Alle Bestellungen\"\r\n                    Helper.redirect(\"/admin/bestellungen/\");\r\n                })\r\n                \r\n            })\r\n            return\r\n        },\r\n        // geladene Bestellungen werden geprueft, ob sie laufend sind (auto ausgeliehen wurde), aber es zu Verspätung bei Autoabgabe durch Kunden kam\r\n        async testVerspeatung(){\r\n            this.bestellungen.forEach(async (item) => {\r\n                let heute = new Date(new Date().setHours(0,0,0,0));\r\n                let enddatum = new Date(item.enddatum) \r\n                // nur bestellungen, wo auto noch nicht abgegeben wurde\r\n                if(enddatum.getTime() < heute.getTime() && (item.status == '6' || item.status == '5')){\r\n                    let oneDay = 24*60*60*1000; // hours*minutes*seconds*milliseconds\r\n                    let diffDays = Math.floor((heute.getTime() - enddatum.getTime())/(oneDay))\r\n                    await this.setzeVerspaetung(item.bnr, diffDays, item.auto_fk)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                Helper.handle(error);\r\n                this.ausgewaehlt = false\r\n                this.msg = \"Alle Bestellungen\"\r\n                Helper.redirect(\"/admin/bestellungen\");\r\n            });\r\n            return\r\n        },\r\n        // Preis anpassen je nach ueberzogener Tage\r\n        async setzeVerspaetung(bnr, tage, autoname){\r\n            UserService.getCar(autoname)\r\n                .then(response =>{\r\n                   let auto = response.data.car\r\n                   let ueberzugsgebuehren = auto.preis * tage\r\n                   if(auto.ausgeliehen){       \r\n                        Auth.addCost(bnr, 3, ueberzugsgebuehren, tage + ' Tage Verspaetete Abgabe Auto')\r\n                        .then(response =>{\r\n                            if(response.data.success){\r\n                                if(response.data.changed){\r\n                                    if(this.bestellkosten.length > 0){\r\n                                        let kosten = this.bestellkosten.find(\r\n                                                (element) => element.bnr == bnr && element.pos == response.data.pos)\r\n                                        kosten.menge = ueberzugsgebuehren\r\n                                        kosten.beschreibung = tage + ' Tage Verspaetete Abgabe Auto'\r\n                                    }\r\n                                }\r\n                                else{\r\n                                    this.bestellkosten.push(response.data.cost)\r\n                                }\r\n                                Auth.updateStatusOrder(bnr, 5)\r\n                                .then((response) =>{\r\n                                    if(response.data.success){\r\n                                        this.bestellungen.find(\r\n                                        (element) => element.bnr == bnr).status = 5\r\n                                        return\r\n                                    }\r\n                                })\r\n                                .catch((error) => {\r\n                                    Helper.handle(error)\r\n                                    this.ausgewaehlt = false\r\n                                    this.msg = \"Alle Bestellungen\"\r\n                                    Helper.redirect(\"/admin/bestellungen\");\r\n                                    return\r\n                                })  \r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            Helper.handle(error)\r\n                            this.ausgewaehlt = false\r\n                            this.msg = \"Alle Bestellungen\"\r\n                            Helper.redirect(\"/admin/bestellungen\");\r\n                            return\r\n                        })\r\n                   }\r\n                })\r\n                .catch((error) => {\r\n                    Helper.handle(error)\r\n                    this.ausgewaehlt = false\r\n                    this.msg = \"Alle Bestellungen\"\r\n                    Helper.redirect(\"/admin/bestellungen\");\r\n                    return\r\n                })\r\n        },\r\n        \r\n        async holeAuto(autoname){\r\n            UserService.getCar(autoname)\r\n            .then(response =>{\r\n                this.auto = response.data.car \r\n            })\r\n            .catch((error) => {\r\n                Helper.handle(error)\r\n                this.ausgewaehlt = false\r\n                this.msg = \"Alle Bestellungen\"\r\n                Helper.redirect(\"/admin/bestellungen/\");\r\n            })\r\n        },\r\n        holeKosten(bnr){\r\n            this.bestellkosten = []\r\n            UserService.getOrderCost(bnr)\r\n                .then((response) => {\r\n                    response.data.costs.forEach((cost) => {\r\n                        this.bestellkosten.push(cost)\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    Helper.handle(error)\r\n                    this.ausgewaehlt = false\r\n                    this.msg = \"Alle Bestellungen\"\r\n                    Helper.redirect(\"/admin/bestellungen/\");\r\n                })\r\n        },\r\n        // faerbe tabelle, wenn doppelte bestellung\r\n        getClass(bestellung) {\r\n              if (bestellung.doppelt) {\r\n                this.class=\"doppelt\"\r\n                return this.class\r\n              }\r\n              else if (bestellung.status == 0){\r\n                this.class = \"offen\"\r\n                return this.class\r\n              }\r\n              else if (bestellung.status == 2) {\r\n                this.class = \"bezahlen\"\r\n                return this.class\r\n              }\r\n              else if (bestellung.status == 6) {\r\n                this.class = \"gestartet\"\r\n                return this.class\r\n              }\r\n              else if (bestellung.status == 3 || bestellung.status == 4){\r\n                this.class = \"beendet\"\r\n                return this.class\r\n              }\r\n              else{\r\n                this.class = \"normal\"\r\n                return this.class\r\n              }\r\n        },\r\n        // zur detaillierten Bestellübersicht wechseln\r\n        editingOrder(bnr){\r\n            this.ausgewaehlt = true;\r\n            this.msg = \"Bestellung Nr.: \" + bnr\r\n            this.gewaehlteBestellung = this.bestellungen.find(\r\n            (element) => element.bnr == bnr)\r\n            this.holeKosten(bnr)\r\n            this.holeAuto(this.gewaehlteBestellung.auto_fk).then(\r\n                this.$router.push(\"/admin/bestellungen/\" + bnr)\r\n            )\r\n        },\r\n        // alle bestellungen von backend holen\r\n        holeBestellungen(typ){\r\n            if (this.bestellungen.length < 1) {\r\n                let bestelltyp = ''\r\n                if(typ == 7){\r\n                    bestelltyp = \"geschlossen\"\r\n                }\r\n                else if(typ == 10){\r\n                    bestelltyp = \"offen \" + 0\r\n                }\r\n                else if(typ == 8 || typ == 9){\r\n                    bestelltyp = \"alle\"\r\n                }\r\n                else{\r\n                    bestelltyp = \"offen \" + typ\r\n                }\r\n                UserService.getOrder(bestelltyp)\r\n                .then((response) => {\r\n                    response.data.orders.forEach((order) => {\r\n                        order.doppelt = false\r\n                        this.bestellungen.push(order)\r\n                    })\r\n                    if(typ == 0 || typ == 10 || typ == 8){\r\n                        this.testdoppelt()\r\n                    } \r\n                    //nur doppelte anzeigen\r\n                    if(typ == 10){\r\n                        let bestellungen = []\r\n                        for(let i=0;i<this.bestellungen.length;i++){\r\n                             if(this.bestellungen[i].doppelt){\r\n                                 bestellungen.push(this.bestellungen[i])\r\n                             }\r\n                        }\r\n                        this.bestellungen = bestellungen\r\n                    }\r\n                    // wenn einzelne bestellung angesehen wird, muessen alle bestellungen geladen werden\r\n                    //um moegliche konflikte zu sehen u. auch spezifische bestellung zu finden\r\n                    if(typ == 9){\r\n                        this.gewaehlteBestellung = this.bestellungen.find(\r\n                        (element) => element.bnr == this.$route.params.bnr)\r\n                        this.holeKosten(this.$route.params.bnr)\r\n                        this.holeAuto(this.gewaehlteBestellung.auto_fk)\r\n                    }\r\n                    this.gesuchteBestellungen = this.bestellungen\r\n                     this.testVerspeatung().then(\r\n                        this.testAbgelaufen().then(\r\n                            this.testNichtAngetreten().then()(\r\n                                this.gesuchteBestellungen = this.bestellungen,\r\n                                // filter automatisch auf geladene datensaetze angewandt\r\n                                this.suchen()\r\n                            )\r\n                        )\r\n                    ) \r\n                })\r\n                .catch((error) => {\r\n                    Helper.handle(error)\r\n                    Helper.redirect(\"/admin\")\r\n                })\r\n               \r\n            }\r\n        },\r\n         // status in text umwandeln\r\n          status(status) {\r\n           if(status == 0){\r\n              return 'Wartet auf Bestaetigung'\r\n           }\r\n           else if(status == 1){\r\n               return 'Bestätigte Bestellung'\r\n           }\r\n           else if(status == 2){\r\n               return 'Bezahlung ausstehend'\r\n           }\r\n           else if(status == 3){\r\n               return 'Abgebrochene Bestellung'\r\n           }\r\n           else if(status == 4){\r\n               return 'Erfolgreich abgeschlossene Bestellung'\r\n           }\r\n           else if(status == 5){\r\n               return 'Überfällige Bestellung'\r\n           }\r\n           else if(status == 6){\r\n               return 'Auto ausgeliehen'\r\n           }\r\n        }   \r\n    },\r\n\r\n    computed: {\r\n        gesamtkosten(){\r\n            if(this.bestellkosten.length > 0){\r\n                let gesamt = 0\r\n                for(let i=0; i<this.bestellkosten.length;i++){\r\n                    gesamt += this.bestellkosten[i].menge\r\n                }\r\n                return gesamt\r\n            }\r\n            else{\r\n                return ''\r\n            }\r\n        }\r\n    },\r\n    beforeMount(){     \r\n        let heute = new Date(new Date().setHours(0,0,0,0));\r\n        this.datepickerSetting.value = Helper.formatDate(heute)\r\n                                                           //0                       3,4                   2                           5                   doppelt = true              6                            1\r\n        this.bestellungstypen = [\"Alle Bestellungen\", \"Offene Bestellanfragen\", \"Bestellungshistorie\", \"Offene Bezahlung\", \"Ueberzogene Bestellungen\",\"Doppelte Bestellungen\", \"Laufende Bestellungen\", \"Bestaetigte Bestellungen\"];\r\n        if (this.$route.params.bnr != \"\") {\r\n            this.ausgewaehlt = true\r\n            this.msg = \"Bestellung: \" + this.$route.params.bnr\r\n            this.holeBestellungen(9)\r\n        }\r\n        else{\r\n            this.ausgewaehlt = false\r\n            this.msg = \"Alle Bestellungen\"\r\n            this.holeBestellungen(0)\r\n        }\r\n    }\r\n}\r\n \r\n</script>\r\n\r\n<style scoped>\r\n\r\n.doppelt{\r\n    background-color: red\r\n}\r\n.offen{\r\n    background-color: yellow\r\n}\r\n.bezahlen {\r\n    background-color: orange\r\n}\r\n.gestartet {\r\n    background-color: rgb(6, 197, 6)\r\n}\r\n.beendet {\r\n    background-color: rgb(161, 158, 158)\r\n}\r\n.normal {\r\n    background-color: rgb(193, 197, 233)\r\n}\r\n\r\n</style>\r\n"],"sourceRoot":""}]}