{"remainingRequest":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\src\\components\\BestellungenMa.vue?vue&type=template&id=6fcbc3da&scoped=true","dependencies":[{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\src\\components\\BestellungenMa.vue","mtime":1609762382419},{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\src\\components\\BestellungenMa.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"ma\">\r\n        <div v-if=\"!ausgewaehlt\">\r\n            <h1>{{msg}}</h1>\r\n            <select v-model=\"bestellungsauswahl\">\r\n                <option value=\"\" disabled selected>Filter Bestellungen</option>\r\n                <option\r\n                    v-for=\"(bestellung, index) in bestellungstypen\"\r\n                    :key=\"index\"\r\n                    :value=\"bestellung\"\r\n                >\r\n                    {{bestellung}}\r\n                </option>\r\n            </select>\r\n            <button @click=\"update()\">Aktualisieren</button>\r\n            <div>\r\n                <datepicker-lite \r\n                :value-attr=\"datepickerSetting.value\"\r\n                :year-minus=\"datepickerSetting.yearMinus\"\r\n                :from=\"datepickerSetting.from\"\r\n                :to=\"datepickerSetting.to\"\r\n                :disabled-date=\"datepickerSetting.disabledDate\"\r\n                :locale=\"datepickerSetting.locale\"\r\n                @value-changed=\"datepickerSetting.changeEvent\"\r\n                />\r\n                <datepicker-lite \r\n                :value-attr=\"datepickerSetting2.value\"\r\n                :year-minus=\"datepickerSetting2.yearMinus\"\r\n                :from=\"datepickerSetting2.from\"\r\n                :to=\"datepickerSetting2.to\"\r\n                :disabled-date=\"datepickerSetting2.disabledDate\"\r\n                :locale=\"datepickerSetting2.locale\"\r\n                @value-changed=\"datepickerSetting2.changeEvent\"\r\n                />\r\n                <input type=\"text\" placeholder=\"Nach BNR suchen\" v-model=\"bnr\">\r\n                <input type=\"text\" placeholder=\"Nach Vorname suchen\" v-model=\"vorname\">\r\n                <input type=\"text\" placeholder=\"Nach Nachname suchen\" v-model=\"nachname\">\r\n                <button @click=\"suchen()\">Suchen</button>\r\n            </div>\r\n            <br /> \r\n            <br />  \r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>BNR</th>\r\n                        <th>Startdatum</th>\r\n                        <th>Enddatum</th>\r\n                        <th>Auto</th>\r\n                        <th>Vorname</th>\r\n                        <th>Nachname</th>\r\n                        <th>Erstelldatum</th>\r\n                        <th>Status</th>\r\n                        <th>Bearbeiten</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr v-for=\"(bestellung, index) in gesuchteBestellungen\" :key=\"index\" :class=\"getClass(bestellung)\">\r\n                        <td>{{bestellung.bnr}}</td>\r\n                        <td>{{bestellung.startdatum}}</td>\r\n                        <td>{{bestellung.enddatum}}</td>\r\n                        <td>{{bestellung.auto_fk}}</td>\r\n                        <td>{{bestellung.vorname}}</td>\r\n                        <td>{{bestellung.nachname}}</td>\r\n                        <td>{{bestellung.zeitstempel}}</td>\r\n                        <td>{{status(bestellung.status)}}</td>\r\n                        <td><button @click=\"editingOrder(bestellung.bnr)\">Weiter</button></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n             <br /> \r\n            <br />  \r\n            <button @click=\"home()\">Zurueck</button>\r\n        </div>\r\n        <div  v-else>\r\n            <h1>{{msg}}</h1>\r\n            <br /> <h3>Auto: {{gewaehlteBestellung.auto_fk}}</h3>\r\n            <br /> <h3>Kunde: {{gewaehlteBestellung.vorname}} {{gewaehlteBestellung.nachname}}</h3>\r\n            <br /> <h3>Email: {{gewaehlteBestellung.user}}</h3>\r\n            <br /> <h3>Adresse: {{gewaehlteBestellung.adresse}}</h3>\r\n            <br /> <h3>Telefon: {{gewaehlteBestellung.telefon}}</h3>\r\n            <br /> <h3>Mietzeitraum: {{gewaehlteBestellung.startdatum}} - {{gewaehlteBestellung.enddatum}}</h3>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Kosten</th>\r\n                        <th>Beschreibung</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr v-for=\"(kosten, index) in bestellkosten\" :key=\"index\">\r\n                        <td>{{kosten.menge}}€</td>\r\n                        <td>{{kosten.beschreibung}}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <br /> <h3>Gesamtkosten: {{gesamtkosten}}€</h3>   \r\n            <button type=\"cancel\" @click=\"back\">Zurueck zur Suche</button>\r\n            <div v-if=\"(gewaehlteBestellung.status==0 || gewaehlteBestellung.status==1) && auto.ausgeliehen ==0\">\r\n                <button @click=\"abbrechen(gewaehlteBestellung.bnr, 0)\" :disabled=\"gewaehlteBestellung.status!=0 && gewaehlteBestellung.status!=1 && auto.ausgeliehen !=0\">Abbrechen</button>\r\n            </div>\r\n            <div v-if=\"gewaehlteBestellung.status==0\">\r\n                <button @click=\"acceptOrder(gewaehlteBestellung.bnr)\" :disabled=\"gewaehlteBestellung.status!=0\">Bestaetigen</button>\r\n            </div>\r\n            <div v-if=\"auto.ausgeliehen == 0 && gewaehlteBestellung.status==1\">\r\n                <button @click=\"ausleihen(auto.name)\">Auto ausleihen</button>\r\n            </div> \r\n            <div v-if=\"gewaehlteBestellung.status==5 && auto.ausgeliehen == 1\">\r\n                <button @click=\"rueckgabe(gewaehlteBestellung.bnr)\">Auto zurueckgeben</button>\r\n            </div>\r\n            <div v-if=\"(auto.ausgeliehen == 1 && gewaehlteBestellung.status==1) || (auto.ausgeliehen == 0 && gewaehlteBestellung.status==2)\">\r\n                <button @click=\"finishOrder(gewaehlteBestellung.bnr)\">Abschließen</button>\r\n            </div>\r\n            <div v-if=\"gewaehlteBestellung.status!=3 && gewaehlteBestellung.status!=4\">\r\n                <button @click=\"showDamage(gewaehlteBestellung)\">Anzeigen Offener Autoprobleme</button>\r\n            </div>\r\n         </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n// Hier wird fuer Mitarbeiter/Admin alles bzgl. Bestellungen angezeigt/definiert\r\nimport UserService from \"../services/user.service\";\r\nimport Auth from \"../services/auth.service\";\r\nimport Helper from \"../services/helper.service\";\r\nimport DatepickerLite from \"./DatepickerLite.vue\";\r\nexport default {\r\n    data(){\r\n        return{\r\n            ausgewaehlt: false,\r\n            msg: '',\r\n            bestellungen: [],\r\n            gesuchteBestellungen: [],\r\n            gewaehlteBestellung: '',\r\n            schaeden: [],\r\n            bestellkosten: [],\r\n            class: '',\r\n            bestellungsauswahl: '',\r\n            bestellungstypen: [],\r\n            auto: '',\r\n            bnr: '',\r\n            vorname: '',\r\n            nachname: '',\r\n            erstelldatum: '',\r\n            start: '',\r\n            ende: '',\r\n            datepickerSetting : {\r\n                value:\"\",\r\n                yearMinus: 0,\r\n                from: \"\",\r\n                to: \"1999/01/01\",\r\n                disabledDate: [],\r\n                locale: {\r\n                format: \"YYYY/MM/DD\",\r\n                weekday: [\"Son\", \"Mon\", \"Dien\", \"Mit\", \"Don\", \"Frei\", \"Sam\"],\r\n                todayBtn: \"Heute\",\r\n                clearBtn: \"Löschen\",\r\n                closeBtn: \"Schliessen\",\r\n                },\r\n                changeEvent: (value) => {\r\n                    this.start = value\r\n                }\r\n            },\r\n            //enddatum\r\n            datepickerSetting2 : {\r\n                value: \"\",\r\n                yearMinus: 0,\r\n                from: \"\",\r\n                to: \"1999/01/01\",\r\n                disabledDate: [],\r\n                locale: {\r\n                format: \"YYYY/MM/DD\",\r\n                weekday: [\"Son\", \"Mon\", \"Dien\", \"Mit\", \"Don\", \"Frei\", \"Sam\"],\r\n                todayBtn: \"Heute\",\r\n                clearBtn: \"Löschen\",\r\n                closeBtn: \"Schliessen\",\r\n                },\r\n                changeEvent: (value) => {\r\n                    this.ende = value\r\n                }\r\n            }\r\n        }\r\n    },\r\n    components: {\r\n        DatepickerLite\r\n    },\r\n    methods: {\r\n        // daten neu laden bzw. bestimmte bestellungstypen anzeigen\r\n        update(){\r\n            if(this.bestellungsauswahl == ''){\r\n                alert(\"Bitte waehlen Sie einen Filter aus\")\r\n                return\r\n            }\r\n            this.bestellungen = []\r\n            this.gesuchteBestellungen = []\r\n            let typ = -1\r\n            if (this.bestellungsauswahl == \"Offene Bestellanfragen\") typ = 0\r\n            else if(this.bestellungsauswahl == \"Bestellungshistorie\") typ = 7 //3 u. 4\r\n            else if(this.bestellungsauswahl == \"Offene Bezahlung\") typ = 2\r\n            else if(this.bestellungsauswahl == \"Ueberzogene Bestellungen\") typ = 5\r\n            else if(this.bestellungsauswahl ==\"Laufende Bestellungen\") typ = 1\r\n            else if(this.bestellungsauswahl == \"Doppelte Bestellungen\") typ = 6\r\n            else if(this.bestellungsauswahl == \"Alle Bestellungen\") typ = 8\r\n            this.holeBestellungen(typ)\r\n        },\r\n        // bestimmte bestellungen suchen\r\n        suchen(){\r\n            this.gesuchteBestellungen = this.bestellungen.filter((bestellung) => {\r\n                let bnr = false;\r\n                let name = false\r\n                let datum = false\r\n                let startdatum = new Date(this.start)\r\n                let enddatum = new Date(this.ende)\r\n                let zeitstempel = new Date(bestellung.zeitstempel)\r\n                if (this.bnr == \"\") {\r\n                    bnr = true;\r\n                } else {\r\n                    bnr = bestellung.bnr == this.bnr;\r\n                }\r\n\r\n                if (this.vorname == \"\" || this.nachname == \"\") {\r\n                    name = true\r\n                } else name = (\r\n                    this.vorname.toLowerCase().split(\" \").every((v) => bestellung.vorname.toLowerCase().includes(v)) &&\r\n                    this.nachname.toLowerCase().split(\" \").every((v) => bestellung.nachname.toLowerCase().includes(v))\r\n                )\r\n                if((this.start == '' && this.ende == '') || (startdatum.getTime() > enddatum.getTime())){\r\n                    datum = true\r\n                }\r\n                else if(this.ende == ''){\r\n                    if(startdatum.getTime() == zeitstempel.getTime()){\r\n                        datum = true\r\n                    }\r\n                    else{\r\n                        datum = false\r\n                    }\r\n                }\r\n                else if(this.start == ''){\r\n                    if(enddatum.getTime() == zeitstempel.getTime()){\r\n                        datum = true\r\n                    }\r\n                    else{\r\n                        datum = false\r\n                    }\r\n                }\r\n                else{\r\n                    if((startdatum.getTime() <= zeitstempel.getTime()) && (enddatum.getTime() >= zeitstempel.getTime())){\r\n                        datum = true\r\n                    }\r\n                    else{\r\n                        datum = false\r\n                    }\r\n                }\r\n                return (bnr && name && datum)\r\n            })\r\n        },\r\n        // zurueck zur allgemeinen Bestellueubersicht\r\n        back() {\r\n            this.ausgewaehlt = false;\r\n            this.msg = \"Alle Bestellungen\"\r\n            this.$router.push(\"/admin/bestellungen\")\r\n        },\r\n        home() {\r\n            this.$router.push(\"/admin\")\r\n        },\r\n        showDamage(bestellung){\r\n            // vor bestaetigung behandlung schaeden\r\n            if(bestellung.status == 0){\r\n                Helper.redirect(\"/admin/\"+bestellung.auto_fk+\"/schaden\");\r\n            }\r\n            // offene oder zeitlich ueberfaellige bestellungen\r\n            else if(bestellung.status == 1 || bestellung.status == 5 || bestellung.status == 2){\r\n                 Helper.redirect(\"/admin/\"+bestellung.auto_fk+\"/schaden\" + \"/\" + bestellung.bnr);\r\n            }\r\n        },\r\n          abbrechen(bnr, skip, auto, bestellkosten) {\r\n            let bestaetigen = false \r\n            if(!skip){\r\n                bestaetigen = confirm(\"Moechten Sie die Bestellung BNR: \" + bnr + \" wirklich abbrechen?\")\r\n            } \r\n            else{\r\n                bestaetigen = true  \r\n            }\r\n            if(bestaetigen){\r\n                let bestellung = 0\r\n                 if(this.$route.params.bnr == ! ''){\r\n                    bestellung = this.gewaehlteBestellung\r\n                    bestellkosten = this.bestellkosten\r\n                    auto = this.auto\r\n                }\r\n                else{\r\n                    bestellung = this.bestellungen.find((element) => element.bnr == bnr)\r\n                }             \r\n                // wenn vor ausleihe des autos vor ort probleme mit kunden (z.b. kann nicht bezahlen), dann abbruch mit strafzahlung\r\n                if(auto.ausgeliehen == 0 && bestellung.status == 1){\r\n                    //Strafe in Form von 30% der Bestellkosten des zu mietenden Autos \r\n                    let kosten = 0\r\n                    for(let i =0; i< bestellkosten.length; i++){\r\n                        if(bestellkosten[i].typ != 0){\r\n                            kosten = bestellkosten[i].menge\r\n                        }\r\n                    }\r\n                    if(!skip) alert(\"Es wird wegen der kurzfristign Absage eine Strafzahlung in Hoehe von \" + ((kosten/100)*30) + \"€ faellig\")\r\n                    bestellung.status = 2\r\n                    Auth.updateStatusOrder(bnr, 2)\r\n                        .then((response) =>{\r\n                            if(response.data.success){\r\n                                    Auth.addCost(bnr, 2, ((kosten/100)*30), 'Strafkosten fuer Problem bei Abholung des Autos')\r\n                                    .then((response) =>{\r\n                                        if(response.data.success){\r\n                                            if(this.$route.params.bnr == ! ''){\r\n                                                // daten aktualisieren, indem in array eingefuegt\r\n                                                this.bestellkosten.push(response.data.cost)\r\n                                            }\r\n                                            // Standarkosten loeschen, da Kunde nie auto ausgeliehen hat\r\n                                            Auth.deleteCost(bnr, 0, null)\r\n                                            .then((response) =>{\r\n                                                if(response.data.success){\r\n                                                     if(this.$route.params.bnr == ! ''){\r\n                                                        // daten aktualisieren, indem aus array geloescht \r\n                                                        for(let i=0; i<this.bestellkosten.length;i++){\r\n                                                            if(this.bestellkosten[i].typ == 0){\r\n                                                                this.bestellkosten.splice(i,1)\r\n                                                                break\r\n                                                            }\r\n                                                        }\r\n                                                     }\r\n                                                }\r\n                                            })\r\n                                            .catch((error) => {\r\n                                                Helper.handle(error)\r\n                                                this.ausgewaehlt = false;\r\n                                                this.msg = \"Alle Bestellungen\"\r\n                                                Helper.redirect(\"/admin/bestellungen\");\r\n                                            })\r\n                                        }\r\n                                    })\r\n                                    .catch((error) => {\r\n                                        Helper.handle(error)\r\n                                        this.ausgewaehlt = false;\r\n                                        this.msg = \"Alle Bestellungen\"\r\n                                        Helper.redirect(\"/admin/bestellungen\");\r\n                                        })\r\n                            }\r\n                            })\r\n                            .catch((error) => {\r\n                            Helper.handle(error)\r\n                            this.ausgewaehlt = false;\r\n                            this.msg = \"Alle Bestellungen\"\r\n                            Helper.redirect(\"/admin/bestellungen\");\r\n                    })\r\n                }\r\n                else{\r\n                    Auth.updateStatusOrder(bnr, 3)\r\n                    .then(response =>{\r\n                        if(response.data.success){\r\n                            if(this.$route.params.bnr != \"\"){\r\n                                this.gewaehlteBestellung.status = 3\r\n                            }\r\n                            this.bestellungen.find(\r\n                            (element) => element.bnr == bnr).status = 3\r\n                            if(!skip) alert(\"Bestellung wurde erfolgreich abgebrochen.\")\r\n                            this.ausgewaehlt = false\r\n                            this.msg = \"Alle Bestellungen\"\r\n                            Helper.redirect(\"/admin/bestellungen\");\r\n                            return\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        Helper.handle(error)\r\n                        this.ausgewaehlt = false\r\n                        this.msg = \"Alle Bestellungen\"\r\n                        Helper.redirect(\"/admin/bestellungen\");\r\n                        return\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        //Bestellung akzeptieren --> 0 zu 1\r\n        acceptOrder(bnr){\r\n            let bestellung = this.bestellungen.find(\r\n            (element) => element.bnr == bnr)\r\n            let date = bestellung\r\n            //ueberpruefung, ob doppelte bestellungen\r\n            if(bestellung.doppelt){\r\n                let doppelt = [bestellung]\r\n                for(let i=0;i<this.bestellungen.length;i++){\r\n                    if(bestellung.bnr == this.bestellungen[i].bnr){\r\n                        continue\r\n                    }\r\n                    else if(bestellung.auto_fk == this.bestellungen[i].auto_fk && this.bestellungen[i].doppelt){\r\n                        doppelt.push(this.bestellungen[i])\r\n                    }\r\n                }\r\n                for(let i=1;i<doppelt.length;i++){\r\n                    alert(\"Die Bestellung BNR: \" + doppelt[i].bnr + \" ueberschneidet sich mit dieser Bestellung\")\r\n                }\r\n                for(let i=1;i<doppelt.length-1;i++){\r\n                    let d1 = new Date(doppelt[i].zeitstempel) \r\n                    let d2 = new Date(doppelt[i+1].zeitstempel) \r\n                    if(d1.getTime() < d2.getTime()){\r\n                        date = doppelt[i]\r\n                    }\r\n                    else{\r\n                        date = doppelt[i+1]\r\n                    }\r\n                }\r\n                if(confirm(\"Soll die frueheste Bestellung BNR: \" +  date.bnr +\" akzeptiert und automatisch die anderen Anfragen abgebrochen werden?\")){\r\n                    doppelt.forEach(async (item) => {\r\n                        if(item.bnr == date.bnr){\r\n                            return\r\n                        }\r\n                        await this.abbrechen(item.bnr, 1)\r\n                    })\r\n                }\r\n                else{\r\n                    return\r\n                }   \r\n            }\r\n            UserService.getSchaeden(date.auto_fk)\r\n                .then((response) => {\r\n                    // wenn kein schaden, dann kann bestellung bestaetigt werden\r\n                    if(response.data.success){\r\n                        Auth.updateStatusOrder(date.bnr, 1)\r\n                        .then((response) =>{\r\n                            if(response.data.success){\r\n                                this.bestellungen.find(\r\n                                (element) => element.bnr == date.bnr).status = 1\r\n                                alert(\"Bestellung wurde erfolgreich bestaetigt.\")\r\n                                this.ausgewaehlt = false\r\n                                this.msg = \"Alle Bestellungen\"\r\n                                Helper.redirect(\"/admin/bestellungen\");\r\n                                return\r\n                            }\r\n                        })\r\n                            .catch((error) => {\r\n                            Helper.handle(error)\r\n                            this.ausgewaehlt = false\r\n                            this.msg = \"Alle Bestellungen\"\r\n                            Helper.redirect(\"/admin/bestellungen\");\r\n                            return\r\n                        })\r\n                    }\r\n                    // offene schaeden sind vorhanden\r\n                    else{\r\n                        let val = false\r\n                        this.schaeden.push.apply(this.schaeden, response.data.cardamage)\r\n                        for(let i=0;i<this.schaeden.length;i++){\r\n                                if(this.schaeden[i].prioritaet == 0){\r\n                                if(confirm(\"Das Auto kann nicht ausgeliehen werden wegen offener fataler Probleme.\\nMoechten Sie diese jetzt bearbeiten?\")){\r\n                                    val = true\r\n                                    Helper.redirect(\"/admin/\" + date.auto_fk + \"/schaden\");\r\n                                    return\r\n                                }\r\n                                val = true\r\n                                return\r\n                            }\r\n                        }\r\n                        if(!val){\r\n                            if(confirm(\"Es bestehen noch offene Probleme, die aber nicht fatal sind. Moechten Sie die Bestellung bestaetigen\")){    \r\n                                Auth.updateStatusOrder(date.bnr, 1)\r\n                                    .then((response) =>{\r\n                                        if(response.data.success){\r\n                                            this.bestellungen.find(\r\n                                            (element) => element.bnr == date.bnr).status = 1\r\n                                            alert(\"Bestellung wurde erfolgreich bestaetigt.\")\r\n                                            Helper.redirect(\"/admin/bestellungen\");\r\n                                            this.ausgewaehlt = false\r\n                                            this.msg = \"Alle Bestellungen\"\r\n                                            return\r\n                                        }\r\n                                    })\r\n                                    .catch((error) => {\r\n                                        Helper.handle(error)\r\n                                        this.ausgewaehlt = false\r\n                                        this.msg = \"Alle Bestellungen\"\r\n                                        Helper.redirect(\"/admin/bestellungen\");\r\n                                        return\r\n                                    })\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    Helper.handle(error)\r\n                    this.ausgewaehlt = false\r\n                    this.msg = \"Alle Bestellungen\"\r\n                    Helper.redirect(\"/admin/bestellungen\");\r\n                })\r\n        },\r\n\r\n        finishOrder(bnr){\r\n            if(confirm(\"Moechten Sie die Bestellung wirklich abschliessen? Haben Sie auch das Auto auf neue Schaeden begutachtet?\")){\r\n                let zusatz = 0\r\n                let bestaetigen = false\r\n                for(let i=0; i<this.bestellkosten.length;i++){\r\n                    if(this.bestellkosten[i].typ != 0){\r\n                        zusatz += this.bestellkosten[i].menge\r\n                    }\r\n                }\r\n                if(zusatz > 0){\r\n                    if(confirm(\"Es sind noch offene Zusatzkosten in Hoehe von \" + zusatz + \"€ zu zahlen.\\nWurden diese bezahlt?\")){\r\n                        bestaetigen = true\r\n                    }\r\n                    else{\r\n                        bestaetigen = false\r\n                    }\r\n                }\r\n                else{\r\n                    bestaetigen = true\r\n                }\r\n                if(bestaetigen){\r\n                    Auth.updateStatusOrder(bnr, 4)\r\n                    .then((response) =>{\r\n                        if(response.data.success){\r\n                            Auth.updateAusleiheAuto(this.auto.name, 0)\r\n                            .then((response) =>{\r\n                                if(response.data.success){\r\n                                    this.gewaehlteBestellung.status = 4\r\n                                    this.auto.ausgeliehen = 0\r\n                                    alert(\"Auto wurde erfolgreich zurueckgegeben\")\r\n                                    return\r\n                                }\r\n                            })\r\n                            .catch((error) => {\r\n                                Helper.handle(error)\r\n                                this.ausgewaehlt = false\r\n                                this.msg = \"Alle Bestellungen\"\r\n                                Helper.redirect(\"/admin/bestellungen\");\r\n                                return\r\n                            })  \r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        Helper.handle(error)\r\n                        this.ausgewaehlt = false\r\n                        this.msg = \"Alle Bestellungen\"\r\n                        Helper.redirect(\"/admin/bestellungen\");\r\n                        return\r\n                    })  \r\n                }\r\n                else{\r\n                    this.rueckgabe(bnr)\r\n                }\r\n            }\r\n        },\r\n        // 5 zu 2, um weitere Verspaetungsgebuehren zu verhindern bzw. wenn Zusatzkosten nicht direkt durch Kunden bezahlt werden koennen (1-->2)\r\n        rueckgabe(bnr){\r\n          if(confirm(\"Wurde das Auto wirklick vom Kunden zurueckgegeben?\")){                \r\n            Auth.updateStatusOrder(bnr, 2)\r\n            .then((response) =>{\r\n                if(response.data.success){\r\n                    Auth.updateAusleiheAuto(this.auto.name, 0)\r\n                    .then((response) =>{\r\n                        if(response.data.success){\r\n                            this.gewaehlteBestellung.status = 2\r\n                            this.auto.ausgeliehen = 0\r\n                            alert(\"Auto wurde erfolgreich zurueckgegeben\")\r\n                            return\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        Helper.handle(error)\r\n                        this.ausgewaehlt = false\r\n                        this.msg = \"Alle Bestellungen\"\r\n                        Helper.redirect(\"/admin/bestellungen\");\r\n                        return\r\n                    })  \r\n                }\r\n            })\r\n            .catch((error) => {\r\n                Helper.handle(error)\r\n                this.ausgewaehlt = false\r\n                this.msg = \"Alle Bestellungen\"\r\n                Helper.redirect(\"/admin/bestellungen\");\r\n                return\r\n            })  \r\n          }\r\n        },\r\n        // mitarbeiter bestaetigt dies, wenn auto ausgeliehen u. kunde standarkosten vor ort bezahlt hat\r\n        ausleihen(auto){\r\n            let gesamt = 0\r\n            for(let i=0; i<this.bestellkosten.length;i++){\r\n                gesamt += this.bestellkosten[i].menge\r\n            }\r\n            if(confirm(\"Wurden die Kosten in Hoehe von \" + gesamt + \"€ bezahlt und ist das Auto bereit fuer die Ausleihe?\")){\r\n                Auth.updateAusleiheAuto(auto, 1)\r\n                .then((response) =>{\r\n                    if(response.data.success){\r\n                        alert(\"Das Auto kann nun ausgeliehen werden\")\r\n                        this.auto.ausgeliehen = 1\r\n                        return\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    Helper.handle(error)\r\n                    this.ausgewaehlt = false\r\n                    this.msg = \"Alle Bestellungen\"\r\n                    Helper.redirect(\"/admin/bestellungen\");\r\n                    return\r\n                })  \r\n            }\r\n        },\r\n        // test, ob bestellungen mehrfach vorhanden sind\r\n        testdoppelt(){\r\n             let verglichen = []\r\n             for(let i=0; i < this.bestellungen.length-1; i++){\r\n                let value = false\r\n                if (this.bestellungen[i].status != 0){\r\n                    continue\r\n                }\r\n                for(let j=0; j < verglichen.length; j++){\r\n                    if(verglichen[j].auto_fk == this.bestellungen[i].auto_fk){\r\n                        value = true\r\n                        break\r\n                    }\r\n                }\r\n                if(value){\r\n                    continue\r\n                }\r\n                verglichen.push(this.bestellungen[i]) \r\n                if(this.bestellungen[i].status == 0){\r\n                        for(let h=i+1; h < this.bestellungen.length; h++){\r\n                            if((this.bestellungen[i].auto_fk == this.bestellungen[h].auto_fk) && (this.bestellungen[h].status == 0)){\r\n                                verglichen.push(this.bestellungen[h])\r\n                                let startdatum = new Date(this.bestellungen[i].startdatum)\r\n                                let enddatum = new Date(this.bestellungen[i].enddatum)\r\n                                let von = new Date(this.bestellungen[h].startdatum)\r\n                                let bis = new Date(this.bestellungen[h].enddatum)\r\n                                if((enddatum.getTime() >= von.getTime()) || (enddatum.getTime() >= bis.getTime())){\r\n                                    this.bestellungen[i].doppelt = true\r\n                                    this.bestellungen[h].doppelt = true\r\n                                }\r\n                                else if((startdatum.getTime() <= von.getTime()) || (startdatum.getTime() <= bis.getTime())){\r\n                                    this.bestellungen[i].doppelt = true\r\n                                    this.bestellungen[h].doppelt = true\r\n                                }\r\n                                else if(((startdatum.getTime() <= von.getTime()) && (enddatum.getTime() >= von.getTime())\r\n                                    ||((startdatum.getTime() <= bis.getTime()) && (enddatum.getTime() >= bis.getTime()))\r\n                                    ||((startdatum.getTime() >= von.getTime()) && (enddatum.getTime() <= bis.getTime())))){\r\n                                    this.bestellungen[i].doppelt = true\r\n                                    this.bestellungen[h].doppelt = true\r\n                                }\r\n                            }\r\n                        }\r\n                }else{\r\n                    continue\r\n                }\r\n            }\r\n        },\r\n        // geladene Bestellungen werden geprueft, ob sie offen, aber schon abgelaufen sind --> automatisch abgebrochen\r\n        async testAbgelaufen(){\r\n            this.bestellungen.forEach(async (item) => {\r\n                let heute = new Date()\r\n                let start = new Date(item.startdatum)\r\n                if(start.getTime() <= heute.getTime() && item.status == '0'){\r\n                    await this.abbrechen(item.bnr, 1)\r\n                }\r\n            })\r\n            return\r\n        },\r\n        // geladene Bestellungen werden geprueft, ob sie laufend sind, aber auto noch nicht abgeholt wurde sind --> automatisch abgebrochen mit strafe\r\n        async testNichtAngetreten(){\r\n            this.bestellungen.forEach(async (item) => {\r\n                let heute = new Date()\r\n                let start = new Date(item.startdatum)\r\n                start.setDate(start.getDate() + 1);\r\n                UserService.getCar(item.auto_fk)\r\n                .then(response =>{\r\n                    let auto = response.data.car \r\n                    if(start.getTime() <= heute.getTime() && item.status == '1' && auto.ausgeliehen == 0){\r\n                         let bestellkosten = []\r\n                         UserService.getOrderCost(item.bnr)\r\n                        .then((response) => {\r\n                            response.data.costs.forEach((cost) => {\r\n                                bestellkosten.push(cost)\r\n                            })\r\n                            this.abbrechen(item.bnr, 1, auto, bestellkosten)\r\n                        })\r\n                        .catch((error) => {\r\n                            Helper.handle(error)\r\n                            this.ausgewaehlt = false\r\n                            this.msg = \"Alle Bestellungen\"\r\n                            Helper.redirect(\"/admin/bestellungen/\");\r\n                        })\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    Helper.handle(error)\r\n                    this.ausgewaehlt = false\r\n                    this.msg = \"Alle Bestellungen\"\r\n                    Helper.redirect(\"/admin/bestellungen/\");\r\n                })\r\n                \r\n            })\r\n            return\r\n        },\r\n        // geladene Bestellungen werden geprueft, ob sie laufend sind, aber es zu Verspätung bei Autoabgabe durch Kunden kam\r\n        async testVerspeatung(){\r\n            this.bestellungen.forEach(async (item) => {\r\n                let heute = new Date()\r\n                let enddatum = new Date(item.enddatum) \r\n                // nur bestellungen, wo auto noch nicht abgegeben wurde\r\n                if(enddatum.getTime() < heute.getTime() && (item.status == '1' || item.status == '5')){\r\n                    let oneDay = 24*60*60*1000; // hours*minutes*seconds*milliseconds\r\n                    let diffDays = Math.floor((heute.getTime() - enddatum.getTime())/(oneDay))\r\n                    await this.setzeVerspaetung(item.bnr, diffDays, item.auto_fk)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                Helper.handle(error);\r\n                this.ausgewaehlt = false\r\n                this.msg = \"Alle Bestellungen\"\r\n                Helper.redirect(\"/admin/bestellungen\");\r\n            });\r\n            return\r\n        },\r\n        // Preis anpassen je nach ueberzogener Tage\r\n        async setzeVerspaetung(bnr, tage, autoname){\r\n            UserService.getCar(autoname)\r\n                .then(response =>{\r\n                   let auto = response.data.car\r\n                   let ueberzugsgebuehren = auto.preis * tage\r\n                   if(auto.ausgeliehen){       \r\n                        Auth.addCost(bnr, 3, ueberzugsgebuehren, tage + ' Tage Verspaetete Abgabe Auto')\r\n                        .then(response =>{\r\n                            if(response.data.success){\r\n                                if(response.data.changed){\r\n                                    if(this.bestellkosten.length > 0){\r\n                                        let kosten = this.bestellkosten.find(\r\n                                                (element) => element.bnr == bnr && element.pos == response.data.pos)\r\n                                        kosten.menge = ueberzugsgebuehren\r\n                                        kosten.beschreibung = tage + ' Tage Verspaetete Abgabe Auto'\r\n                                    }\r\n                                }\r\n                                else{\r\n                                    this.bestellkosten.push(response.data.cost)\r\n                                }\r\n                                Auth.updateStatusOrder(bnr, 5)\r\n                                .then((response) =>{\r\n                                    if(response.data.success){\r\n                                        this.bestellungen.find(\r\n                                        (element) => element.bnr == bnr).status = 5\r\n                                        return\r\n                                    }\r\n                                })\r\n                                .catch((error) => {\r\n                                    Helper.handle(error)\r\n                                    this.ausgewaehlt = false\r\n                                    this.msg = \"Alle Bestellungen\"\r\n                                    Helper.redirect(\"/admin/bestellungen\");\r\n                                    return\r\n                                })  \r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            Helper.handle(error)\r\n                            this.ausgewaehlt = false\r\n                            this.msg = \"Alle Bestellungen\"\r\n                            Helper.redirect(\"/admin/bestellungen\");\r\n                            return\r\n                        })\r\n                   }\r\n                })\r\n                .catch((error) => {\r\n                    Helper.handle(error)\r\n                    this.ausgewaehlt = false\r\n                    this.msg = \"Alle Bestellungen\"\r\n                    Helper.redirect(\"/admin/bestellungen\");\r\n                    return\r\n                })\r\n        },\r\n        \r\n        async holeAuto(autoname){\r\n            UserService.getCar(autoname)\r\n            .then(response =>{\r\n                this.auto = response.data.car \r\n            })\r\n            .catch((error) => {\r\n                Helper.handle(error)\r\n                this.ausgewaehlt = false\r\n                this.msg = \"Alle Bestellungen\"\r\n                Helper.redirect(\"/admin/bestellungen/\");\r\n            })\r\n        },\r\n        holeKosten(bnr){\r\n            this.bestellkosten = []\r\n            UserService.getOrderCost(bnr)\r\n                .then((response) => {\r\n                    response.data.costs.forEach((cost) => {\r\n                        this.bestellkosten.push(cost)\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    Helper.handle(error)\r\n                    this.ausgewaehlt = false\r\n                    this.msg = \"Alle Bestellungen\"\r\n                    Helper.redirect(\"/admin/bestellungen/\");\r\n                })\r\n        },\r\n        // faerbe tabelle, wenn doppelte bestellung\r\n        getClass(bestellung) {\r\n              if (bestellung.doppelt) {\r\n                this.class=\"doppelt\"\r\n                return this.class\r\n              }\r\n              else if (bestellung.status == 2) {\r\n                this.class = \"bezahlen\"\r\n                return this.class\r\n              }\r\n              else{\r\n                this.class = \"normal\"\r\n                return this.class\r\n              }\r\n        },\r\n        // zur detaillierten Bestellübersicht wechseln\r\n        editingOrder(bnr){\r\n            this.ausgewaehlt = true;\r\n            this.msg = \"Bestellung: \" + bnr\r\n            this.gewaehlteBestellung = this.bestellungen.find(\r\n            (element) => element.bnr == bnr)\r\n            this.holeKosten(bnr)\r\n            this.holeAuto(this.gewaehlteBestellung.auto_fk).then(\r\n                this.$router.push(\"/admin/bestellungen/\" + bnr)\r\n            )\r\n        },\r\n        // alle bestellungen von backend holen\r\n        holeBestellungen(typ){\r\n            if (this.bestellungen.length < 1) {\r\n                let bestelltyp = ''\r\n                if(typ == 7){\r\n                    bestelltyp = \"geschlossen\"\r\n                }\r\n                else if(typ == 6){\r\n                    bestelltyp = \"offen \" + 0\r\n                }\r\n                else if(typ == 8 || typ == 9){\r\n                    bestelltyp = \"alle\"\r\n                }\r\n                else{\r\n                    bestelltyp = \"offen \" + typ\r\n                }\r\n                UserService.getOrder(bestelltyp)\r\n                .then((response) => {\r\n                    response.data.orders.forEach((order) => {\r\n                        order.doppelt = false\r\n                        this.bestellungen.push(order)\r\n                    })\r\n                    if(typ == 0 || typ == 6|| typ == 8){\r\n                        this.testdoppelt()\r\n                    } \r\n                    //nur doppelte anzeigen\r\n                    if(typ == 6){\r\n                        let bestellungen = []\r\n                        for(let i=0;i<this.bestellungen.length;i++){\r\n                             if(this.bestellungen[i].doppelt){\r\n                                 bestellungen.push(this.bestellungen[i])\r\n                             }\r\n                        }\r\n                        this.bestellungen = bestellungen\r\n                    }\r\n                    // wenn einzelne bestellung angesehen wird, muessen alle bestellungen geladen werden\r\n                    //um moegliche konflikte zu sehen u. auch spezifische bestellung zu finden\r\n                    if(typ == 9){\r\n                        this.gewaehlteBestellung = this.bestellungen.find(\r\n                        (element) => element.bnr == this.$route.params.bnr)\r\n                        this.holeKosten(this.$route.params.bnr)\r\n                        this.holeAuto(this.gewaehlteBestellung.auto_fk)\r\n                    }\r\n                    this.gesuchteBestellungen = this.bestellungen\r\n                     this.testVerspeatung().then(\r\n                        this.testAbgelaufen().then(\r\n                            this.testNichtAngetreten().then()(\r\n                                this.gesuchteBestellungen = this.bestellungen,\r\n                                // filter automatisch auf geladene datensaetze angewandt\r\n                                this.suchen()\r\n                            )\r\n                        )\r\n                    ) \r\n                })\r\n                .catch((error) => {\r\n                    Helper.handle(error)\r\n                    Helper.redirect(\"/admin\")\r\n                })\r\n               \r\n            }\r\n        },\r\n         // status in text umwandeln\r\n          status(status) {\r\n           if(status == 0){\r\n              return 'Wartet auf Bestaetigung'\r\n           }\r\n           else if(status == 1){\r\n               return 'Laufende Bestellung'\r\n           }\r\n           else if(status == 2){\r\n               return 'Bezahlung ausstehend'\r\n           }\r\n           else if(status == 3){\r\n               return 'Abgebrochene Bestellung'\r\n           }\r\n           else if(status == 4){\r\n               return 'Erfolgreich abgeschlossene Bestellung'\r\n           }\r\n           else if(status == 5){\r\n               return 'Überfällige Bestellung'\r\n           }\r\n        }   \r\n    },\r\n\r\n    computed: {\r\n        gesamtkosten(){\r\n            if(this.bestellkosten.length > 0){\r\n                let gesamt = 0\r\n                for(let i=0; i<this.bestellkosten.length;i++){\r\n                    gesamt += this.bestellkosten[i].menge\r\n                }\r\n                return gesamt\r\n            }\r\n            else{\r\n                return ''\r\n            }\r\n        }\r\n    },\r\n    beforeMount(){     \r\n        let heute = new Date()\r\n        this.datepickerSetting.value = Helper.formatDate(heute)\r\n                                                           //0                       3,4                   2                           5                   doppelt = true              1\r\n        this.bestellungstypen = [\"Alle Bestellungen\", \"Offene Bestellanfragen\", \"Bestellungshistorie\", \"Offene Bezahlung\", \"Ueberzogene Bestellungen\",\"Doppelte Bestellungen\", \"Laufende Bestellungen\"];\r\n        if (this.$route.params.bnr != \"\") {\r\n            this.ausgewaehlt = true\r\n            this.msg = \"Bestellung: \" + this.$route.params.bnr\r\n            this.holeBestellungen(9)\r\n        }\r\n        else{\r\n            this.ausgewaehlt = false\r\n            this.msg = \"Alle Bestellungen\"\r\n            this.holeBestellungen(0)\r\n        }\r\n    }\r\n}\r\n \r\n</script>\r\n\r\n<style scoped>\r\n/* .ma{\r\n    background-color: cornflowerblue;\r\n    background-size: 100% 100%;\r\n    min-height: 200%;\r\n\r\n\r\n} */\r\n\r\np{\r\n    color:white;\r\n    text-align: center;\r\n    font-size: small;\r\n}\r\n\r\n.doppelt{\r\n    background-color: red\r\n}\r\n.bezahlen {\r\n    background-color: orange\r\n}\r\n.normal {\r\n    background-color: rgb(193, 197, 233)\r\n}\r\ntable, th, td {\r\n  border: 1px solid black;\r\n  border-collapse: collapse;\r\n  padding: 15px;\r\n  border-spacing: 5px;\r\n  width: 100%;\r\n}\r\nbutton{\r\n  box-shadow: 0px 0px 0px 2px #9fb4f2;\r\n\t/* background:linear-gradient(to bottom, #7892c2 5%, #476e9e 100%);\r\n\tbackground-color:#7892c2;\r\n\tborder-radius:10px;\r\n\tborder:1px solid #4e6096;\r\n\tdisplay:inline-block;\r\n\tcursor:pointer; */\r\n\tcolor:#ffffff;\r\n\tfont-family:Arial;\r\n\tfont-size:14px;\r\n\tpadding:20px 40px 20px;\r\n\ttext-decoration:none;\r\n\ttext-shadow:0px 1px 0px #283966;\r\n  align-content: center;\r\n  width: 20%;\r\n}\r\n\r\n</style>\r\n"],"sourceRoot":""}]}