{"remainingRequest":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\src\\components\\Rent.vue?vue&type=style&index=0&id=8d1c7a2e&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\src\\components\\Rent.vue","mtime":1609778787349},{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpoMXsNCiAgICBjb2xvcjogYmx1ZTsNCn0NCnB7DQogICAgY29sb3I6IGJsYWNrOw0KfQ0KDQo="},{"version":3,"sources":["C:\\Users\\coanh\\OneDrive\\Documents\\SW-Projekt\\Auto\\Autovermietung\\Autovermietung\\src\\components\\Rent.vue"],"names":[],"mappings":";AA+PA,CAAC,CAAC;IACE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACf;AACA,CAAC;IACG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB","file":"C:/Users/coanh/OneDrive/Documents/SW-Projekt/Auto/Autovermietung/Autovermietung/src/components/Rent.vue","sourceRoot":"","sourcesContent":["<template>\r\n<div>\r\n        <h1>Auto buchen</h1>\r\n        <br />\r\n        <br />\r\n        <br /> <h3>{{auto.name}}</h3>\r\n        <br /> <h3>{{user.vorname}} {{user.nachname}}</h3>\r\n        <br /> <h3>{{user.adresse}}</h3>\r\n        <br /> <h3>{{user.telefon}}</h3>\r\n        <br /> <h3>{{user.user}}</h3>\r\n        <br />\r\n        <datepicker-lite\r\n            :value-attr=\"datepickerSetting.value\"\r\n            :placeholder-attr=\"datepickerSetting.placeholder\"\r\n            :year-minus=\"datepickerSetting.yearMinus\"\r\n            :from=\"datepickerSetting.fromDate\"\r\n            :to=\"datepickerSetting.toDate\"\r\n            :disabled-date=\"datepickerSetting.disabledDate\"\r\n            :locale=\"datepickerSetting.locale\"\r\n            @value-changed=\"datepickerSetting.changeEvent\"\r\n        />\r\n        <datepicker-lite \r\n            :value-attr=\"datepickerSetting2.value\"\r\n            :placeholder-attr=\"datepickerSetting2.placeholder\"\r\n            :year-minus=\"datepickerSetting2.yearMinus\"\r\n            :from=\"datepickerSetting2.fromDate\"\r\n            :to=\"datepickerSetting2.toDate\"\r\n            :disabled-date=\"datepickerSetting.disabledDate\"\r\n            :locale=\"datepickerSetting2.locale\"\r\n            @value-changed=\"datepickerSetting2.changeEvent\"\r\n         />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br /> <h3>Kosten: {{kosten}} €</h3>\r\n        <button\r\n            @click='bestellen()'\r\n            :disabled=\"!verfuegbarkeit(auto.verfuegbar)\"\r\n            >\r\n            Anfrage\r\n        </button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// Hier kann Kunde Bestellung erstellen\r\nimport DatepickerLite from \"vue3-datepicker-lite\";\r\nimport UserService from \"../services/user.service\";\r\nimport Helper from \"../services/helper.service\";\r\nimport Auth from \"../services/auth.service\";\r\nexport default {\r\n    data(){\r\n        return{            \r\n            name: '',\r\n            adresse: '',\r\n            telefon: '',\r\n            email: '',\r\n            start: '',\r\n            ende: '',\r\n            user: '',\r\n            auto: '',\r\n            cost: '',\r\n            datepickerSetting : {\r\n                value:\"\",\r\n                placeholder: \"Startdatum\",\r\n                yearMinus: 0,\r\n                fromDate: \"2020/01/01\",\r\n                toDate: \"2030/12/10\",\r\n                disabledDate: [],\r\n                locale: {\r\n                format: \"YYYY/MM/DD\",\r\n                weekday: [\"Son\", \"Mon\", \"Dien\", \"Mit\", \"Don\", \"Frei\", \"Sam\"],\r\n                todayBtn: \"Heute\",\r\n                clearBtn: \"Löschen\",\r\n                closeBtn: \"Schliessen\",\r\n                },\r\n                changeEvent: (value) => {\r\n                    let date = new Date()\r\n                    let date2 = new Date(value)\r\n                    if(date2.getTime() <= date.getTime()){\r\n                        this.start = ''\r\n                        alert('Ungültiges Startdatum')\r\n                    }\r\n                    else{\r\n                        this.start = value\r\n                    }\r\n                }\r\n            },\r\n            //enddatum\r\n            datepickerSetting2 : {\r\n                value: \"\",\r\n                placeholder: \"Enddatum\",\r\n                yearMinus: 0,\r\n                fromDate: \"2020/01/01\",\r\n                toDate: \"2030/12/10\",\r\n                disabledDate: [],\r\n                locale: {\r\n                format: \"YYYY/MM/DD\",\r\n                weekday: [\"Son\", \"Mon\", \"Dien\", \"Mit\", \"Don\", \"Frei\", \"Sam\"],\r\n                todayBtn: \"Heute\",\r\n                clearBtn: \"Löschen\",\r\n                closeBtn: \"Schliessen\",\r\n                },\r\n                changeEvent: (value) => {\r\n                    let date = new Date()\r\n                    let date2 = new Date(value)\r\n                    if(date2.getTime() <= date.getTime()){\r\n                        this.ende = ''\r\n                        alert('Ungültiges Enddatum')\r\n                    }\r\n                    else{\r\n                        this.ende = value\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    components: {\r\n        DatepickerLite\r\n    },\r\n    methods: {\r\n        // kann keine bestellung fuer auto erstellen, welches derzeit nicht verfuegbar ist\r\n         verfuegbarkeit(vorhanden) {\r\n            if (vorhanden == 1) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n         },\r\n         // kosten an backend geben\r\n         setKosten(cost) {\r\n           this.cost = cost\r\n         },\r\n        //Hier Methode zum Bestellen\r\n        bestellen(){\r\n            if(this.start == '' && this.ende == ''){\r\n                alert('Start- und Enddatum dürfen nicht leer/ungültig sein')\r\n                return\r\n            }\r\n            else if(this.start == ''){\r\n                alert('Bitte aktualisieren Sie erst das Startdatum zu einem gültigen Datum')\r\n                return\r\n            }\r\n            else if(this.ende == ''){\r\n                alert('Bitte aktualisieren Sie erst das Enddatum zu einem gültigen Datum')\r\n                return\r\n            }\r\n            else{\r\n                let startdatum = new Date(this.start)\r\n                let enddatum = new Date(this.ende)\r\n                if(startdatum.getTime() > enddatum.getTime()){\r\n                    alert('Enddatum darf nicht vor Startdatum liegen')\r\n                    return\r\n                }\r\n                else{\r\n                    let bestellung\r\n                    for(bestellung of this.zeiten){ \r\n                        let von = new Date(bestellung.startdatum)\r\n                        let bis = new Date(bestellung.enddatum)\r\n                        let startdatum = new Date(this.start)\r\n                        let enddatum = new Date(this.ende)\r\n                        if(((startdatum.getTime() < von.getTime()) && (enddatum.getTime() > bis.getTime()))){\r\n                            alert(this.$route.params.autoname + ' ist bereits innerhalb des Zeitraumes gemietet')\r\n                            return\r\n                        }\r\n\r\n\r\n                    }    \r\n\r\n                }\r\n            }\r\n\r\n            //Hier Bestellung in Backend erstellen mit Status '0'\r\n            //Hier auch noch prüfen, dass Kunde nur eine Bestellung gleichzeitig in DB haben darf \r\n            //--> sonst könnte ein Kunde einfach alles auf einmal mieten\r\n            Auth.createOrder(this.auto.name, this.start, this.ende, this.cost)\r\n            .then(response => {\r\n                if(response.data.success){\r\n                     //Bestätigung, wenn Bestellung erfolgreich erstellt wurde in DB\r\n                    alert('Die Mietanfrage für ' + this.$route.params.autoname + ' für den Zeitraum: ' + this.start + ' - ' + this.ende\r\n                      + ' wird von einem Mitarbeiter bearbeitet. Den Stand Ihrer Anfrage können Sie in Ihrem Account nachverfolgen')\r\n                     Helper.redirect('/login')     \r\n                }\r\n            })\r\n            .catch((error) => {\r\n              Helper.handle(error)\r\n              Helper.redirect('/')\r\n            })\r\n        },\r\n        //Alle Tage zw. (inklusive) Start- und Enddatum deaktivieren\r\n        erstelleDeaktivierteZeiten(){\r\n            let bestellung = ''\r\n            for(bestellung of this.zeiten){             \r\n                let start = new Date(bestellung.startdatum)\r\n                let stop = new Date(bestellung.enddatum)\r\n                let current = start\r\n                while (current.getTime() <= stop.getTime()) {\r\n                    this.datepickerSetting.disabledDate.push(Helper.formatDate(current));\r\n                    current.setDate(current.getDate() + 1)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    computed: {\r\n        // kosten berechnen durch bestimmung zeitraumlaenge in tage\r\n        kosten: function () {\r\n            if(this.start != '' && this.ende != ''){\r\n                let startdatum = new Date(this.start)\r\n                let enddatum = new Date(this.ende)\r\n                if(startdatum.getTime() > enddatum.getTime()){\r\n                        return ''\r\n                }\r\n                else{\r\n                    let oneDay = 24*60*60*1000; // hours*minutes*seconds*milliseconds\r\n                    let diffDays = Math.floor((enddatum.getTime() - startdatum.getTime())/(oneDay))\r\n                    let cost = this.auto.preis * (diffDays +1)\r\n                    this.setKosten(cost)\r\n                    return cost\r\n                }\r\n            }\r\n            else{\r\n                return ''\r\n            }\r\n        }\r\n    },\r\n    beforeMount(){\r\n        let to = new Date();\r\n        to.setDate(to.getDate() + 90) //max. 3 Monate in Zukunft buchen\r\n        //Zeiträume für Start-und Endkalender festlegen\r\n        this.datepickerSetting.toDate = Helper.formatDate(to)\r\n        this.datepickerSetting2.toDate = Helper.formatDate(to)\r\n        UserService.getUser()\r\n        .then((response) =>{\r\n            this.user = response.data.user;     \r\n            UserService.getCar(this.$route.params.autoname)\r\n                .then((response) =>{\r\n                    this.auto = response.data.car  \r\n                    this.zeiten = response.data.carTimes\r\n                    this.erstelleDeaktivierteZeiten()            \r\n                })\r\n                .catch((error) => {\r\n                    Helper.handle(error)\r\n                    Helper.redirect(\"/\");\r\n                })           \r\n        })\r\n        .catch((error) => {\r\n            Helper.handle(error)\r\n            Helper.redirect(\"/\");\r\n        })\r\n    }\r\n  \r\n}\r\n</script>\r\n\r\n<style scoped>\r\nh1{\r\n    color: blue;\r\n}\r\np{\r\n    color: black;\r\n}\r\n\r\n</style>"]}]}